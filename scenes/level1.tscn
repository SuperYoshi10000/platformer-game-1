[gd_scene load_steps=30 format=4 uid="uid://bocxp7if1exkk"]

[ext_resource type="MeshLibrary" uid="uid://bileyis2vkwde" path="res://scenes/default-meshlib.tres" id="1_g2h75"]
[ext_resource type="Script" uid="uid://1jvkp52em7rq" path="res://scenes/player.gd" id="1_ru4tf"]
[ext_resource type="Texture2D" uid="uid://bosb8v3jsi7kq" path="res://meshes/player-test.png" id="1_wwpf4"]
[ext_resource type="PackedScene" uid="uid://mml06u1m7pqs" path="res://meshes/player.gltf" id="3_dwgg1"]

[sub_resource type="BoxShape3D" id="BoxShape3D_wwpf4"]
size = Vector3(0.8, 1.8, 1)

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_dwgg1"]
sky_top_color = Color(0.45098, 0.576471, 0.74902, 1)
ground_curve = 0.1
sun_angle_max = 0.0

[sub_resource type="Sky" id="Sky_wwpf4"]
sky_material = SubResource("ProceduralSkyMaterial_dwgg1")

[sub_resource type="Environment" id="Environment_wwpf4"]
background_mode = 2
sky = SubResource("Sky_wwpf4")
sky_rotation = Vector3(-1.14319, 0, 0)
ambient_light_color = Color(1, 1, 1, 1)

[sub_resource type="CompressedTexture3D" id="CompressedTexture3D_dklm3"]
load_path = "res://.godot/imported/curl_noise_varied.tga-e11e3fd1c7a5a54eebcff93a4ba19ea5.ctex3d"

[sub_resource type="CompressedTexture3D" id="CompressedTexture3D_rhxyi"]
load_path = "res://.godot/imported/bluenoise_Dither.png-46e0852a591171c905cd8bf2cebacaaf.ctex3d"

[sub_resource type="Gradient" id="Gradient_uclom"]
colors = PackedColorArray(1, 1, 1, 0, 1, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_w4rkf"]
frequency = 0.0039

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ch57t"]
width = 1024
height = 1024
seamless = true
seamless_blend_skirt = 0.3
color_ramp = SubResource("Gradient_uclom")
noise = SubResource("FastNoiseLite_w4rkf")

[sub_resource type="Gradient" id="Gradient_x3ayj"]
interpolation_mode = 2
offsets = PackedFloat32Array(0, 0.0707071, 0.179293, 0.560472, 0.876033, 1)
colors = PackedColorArray(0, 0.278431, 1, 0, 1, 0.847059, 1, 0.478431, 0.93, 1, 1, 0.917647, 0.866667, 1, 0.894118, 1, 0.8, 0.898039, 0.560784, 1, 0, 0.92549, 0.345098, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_pwfjq"]
gradient = SubResource("Gradient_x3ayj")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_o0m1u"]
noise_type = 2
seed = 2
frequency = 0.0382

[sub_resource type="NoiseTexture3D" id="NoiseTexture3D_xalux"]
width = 128
height = 128
depth = 128
invert = true
seamless = true
seamless_blend_skirt = 0.487
noise = SubResource("FastNoiseLite_o0m1u")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_n1wlf"]
noise_type = 2
seed = 1
frequency = 0.0306

[sub_resource type="NoiseTexture3D" id="NoiseTexture3D_usxnw"]
width = 128
height = 128
depth = 128
seamless = true
seamless_blend_skirt = 0.2
noise = SubResource("FastNoiseLite_n1wlf")

[sub_resource type="RDShaderSPIRV" id="RDShaderSPIRV_01xvs"]
bytecode_compute = PackedByteArray("")

[sub_resource type="RDShaderFile" id="RDShaderFile_qonno"]
_versions = {
&"": SubResource("RDShaderSPIRV_01xvs")
}

[sub_resource type="GDScript" id="GDScript_434j5"]
script/source = "@tool
extends CompositorEffect
class_name SunshineCloudsGD

@export_tool_button(\"Refresh Compute\", \"Clear\") var refresh_action = refresh_compute


@export_group(\"Basic Settings\")
@export_range(0, 1) var clouds_coverage : float = 0.6
@export_range(0, 20) var clouds_density : float = 1.0
@export_range(0, 2) var atmospheric_density : float = 0.5
@export_range(0, 10) var lighting_density : float = 0.55
@export_range(0, 1) var fog_effect_ground : float = 1.0

@export_subgroup(\"Colors\")
@export_range(0, 1) var clouds_anisotropy : float = 0.3
@export_range(0, 1) var clouds_powder : float = 0.5
@export var cloud_ambient_color : Color = Color(0.352, 0.624, 0.784, 1.0)
@export var cloud_ambient_tint : Color = Color(0.352, 0.624, 0.784, 1.0)
@export var atmosphere_color : Color = Color(0.801, 0.893, 0.962, 1.0)
@export var ambient_occlusion_color : Color = Color(0.17, 0.044, 0.027, 0.549)

@export_subgroup(\"Structure\")
@export_range(0, 1) var accumulation_decay : float = 0.5
@export_range(100, 1000000) var extra_large_noise_scale : float = 320000.0
@export_range(100, 500000) var large_noise_scale : float = 50000.0
@export_range(100, 100000) var medium_noise_scale : float = 6000.0
@export_range(100, 10000) var small_noise_scale : float = 2500.0
@export_range(0, 2) var clouds_sharpness : float = 1.0
@export_range(0, 3) var clouds_detail_power : float = 0.9
@export_range(0, 50000) var curl_noise_strength : float = 5000.0
@export_range(0, 2) var lighting_sharpness : float = 0.05
@export_range(0, 1) var wind_swept_range : float = 0.5
@export_range(0, 5000) var wind_swept_strength : float = 500.0

@export var cloud_floor : float = 1500.0
@export var cloud_ceiling : float = 25000.0

@export_subgroup(\"Performance\")
@export var max_step_count : float = 50
@export var max_lighting_steps : float = 32
@export_enum(\"Native\",\"Half\",\"Quarter\",\"Eighth\") var resolution_scale = 0:
	get:
		return resolution_scale
	set(value):
		resolution_scale = value
		last_size = Vector2i(0, 0)
		lights_updated = true
@export_range(0, 2) var lod_bias : float = 1.0

@export_subgroup(\"Noise Textures\")
@export var dither_noise : Texture3D
@export var height_gradient : Texture2D
@export var extra_large_noise_patterns : Texture2D
@export var large_scale_noise : Texture3D
@export var medium_scale_noise : Texture3D
@export var small_scale_noise : Texture3D
@export var curl_noise : Texture3D

@export_group(\"Advanced Settings\")
@export_subgroup(\"Visuals\")
@export_range(0, 1000) var dither_speed : float = 100.8254
@export_range(0, 20) var blur_power : float = 2.0
@export_range(0, 6) var blur_quality : float = 1.0

@export_subgroup(\"Reflections\")
@export var reflections_globalshaderparam : String = \"\"

@export_subgroup(\"Performance\")
@export var min_step_distance : float = 100.0
@export var max_step_distance : float = 600.0
@export var lighting_travel_distance : float = 5000.0

@export_subgroup(\"Mask\")
@export var extra_large_used_as_mask : bool = false
@export var mask_width_km : float = 32.0;

@export_group(\"Compute Shaders\")
@export var pre_pass_compute_shader : RDShaderFile
@export var compute_shader : RDShaderFile
@export var post_pass_compute_shader : RDShaderFile

@export_group(\"Internal Use\")
@export var origin_offset : Vector3 = Vector3.ZERO
@export_subgroup(\"Positions\")
@export var wind_direction : Vector3 = Vector3.ZERO
var extra_large_scale_clouds_position : Vector3 = Vector3.ZERO
var large_scale_clouds_position : Vector3 = Vector3.ZERO
var medium_scale_clouds_position : Vector3 = Vector3.ZERO
var detail_clouds_position : Vector3 = Vector3.ZERO
var current_time : float = 0.0

@export_subgroup(\"Lights\")
@export var directional_lights_data : Array[Vector4] = []
@export var point_lights_data : Array[Vector4] = []
@export var point_effector_data : Array[Vector4] = []

var positionQueries : Array[Vector3] = []
var positionQueryCallables : Array[Callable] = []
var positionQuerying : bool = false
var positionResetting : bool = false

var lights_updated = false

var maskDrawnRid : RID = RID()

var rd : RenderingDevice
var shader : RID = RID()
var pipeline : RID = RID()

var prepass_shader : RID = RID()
var prepass_pipeline : RID = RID()

var postpass_shader : RID = RID()
var postpass_pipeline : RID = RID()

var nearest_sampler : RID = RID()
var linear_sampler : RID = RID()
var linear_sampler_no_repeat : RID = RID()

var general_data_buffer : RID = RID()
var light_data_buffer : RID = RID()
var point_sample_data_buffer : RID = RID()
var accumulation_textures : Array[RID] = []
var resized_depth : RID = RID()
var last_size : Vector2i = Vector2i(0, 0)
var color_images : Array[RID] = []
var msaa_color_images : Array[RID] = []

var buffers : RenderSceneBuffersRD


var uniform_sets : Array[RID] = []
var general_data : PackedByteArray

var light_data : PackedByteArray

var accumulation_is_a : bool = false

var first_run : bool = true
var filter_index = 0

func refresh_compute():
	maskDrawnRid = RID()
	last_size = Vector2i.ZERO

func update_mask(newMask : RID):
	maskDrawnRid = newMask
	last_size = Vector2i.ZERO

func add_sample(callable : Callable, position : Vector3):
	#if (positionQueries.size() == 32):
		#print(\"Max cloud position sample queue reached (32), query failed.\")
		#return
	positionQueries.append(position)
	positionQueryCallables.append(callable)

func _init():
	effect_callback_type = CompositorEffect.EFFECT_CALLBACK_TYPE_PRE_TRANSPARENT
	access_resolved_depth = true
	access_resolved_color = true
	needs_motion_vectors = true
	RenderingServer.call_on_render_thread(initialize_compute)

func _notification(what):
	if what == NOTIFICATION_PREDELETE and is_instance_valid(self):
		RenderingServer.call_on_render_thread(clear_compute)

func clear_compute():
	if rd:
		if shader.is_valid():
			rd.free_rid(shader)
		shader = RID()
		
		if prepass_shader.is_valid():
			rd.free_rid(prepass_shader)
		prepass_shader = RID()
		
		if postpass_shader.is_valid():
			rd.free_rid(postpass_shader)
		postpass_shader = RID()
		
		if nearest_sampler.is_valid():
			rd.free_rid(nearest_sampler)
		nearest_sampler = RID()
		
		if linear_sampler.is_valid():
			rd.free_rid(linear_sampler)
		linear_sampler = RID()
		
		if linear_sampler_no_repeat.is_valid():
			rd.free_rid(linear_sampler_no_repeat)
		linear_sampler_no_repeat = RID()
		
		if general_data_buffer.is_valid():
			rd.free_rid(general_data_buffer)
		general_data_buffer = RID()
		
		if light_data_buffer.is_valid():
			rd.free_rid(light_data_buffer)
		light_data_buffer = RID()
		
		if point_sample_data_buffer.is_valid():
			rd.free_rid(point_sample_data_buffer)
		point_sample_data_buffer = RID()
		
		if resized_depth.is_valid():
			rd.free_rid(resized_depth)
		resized_depth = RID()
		
		if accumulation_textures.size() > 0:
			for item in accumulation_textures:
				if item.is_valid():
					rd.free_rid(item)
			accumulation_textures.clear()
		
		if msaa_color_images.size() > 0:
			for item in msaa_color_images:
				if item.is_valid():
					rd.free_rid(item)
			msaa_color_images.clear()

func initialize_compute():
	first_run = true
	if not rd:
		rd = RenderingServer.get_rendering_device()
		if not rd:
			enabled = false
			printerr(\"No rendering device on load.\")
			return
	clear_compute()
	
	var sampler_state = RDSamplerState.new()
	sampler_state.min_filter = RenderingDevice.SAMPLER_FILTER_NEAREST
	sampler_state.mag_filter = RenderingDevice.SAMPLER_FILTER_NEAREST
	sampler_state.repeat_u = RenderingDevice.SAMPLER_REPEAT_MODE_REPEAT
	sampler_state.repeat_v = RenderingDevice.SAMPLER_REPEAT_MODE_REPEAT
	sampler_state.repeat_w = RenderingDevice.SAMPLER_REPEAT_MODE_REPEAT
	nearest_sampler = rd.sampler_create(sampler_state)
	
	var linear_sampler_state = RDSamplerState.new()
	linear_sampler_state.min_filter = RenderingDevice.SAMPLER_FILTER_LINEAR
	linear_sampler_state.mag_filter = RenderingDevice.SAMPLER_FILTER_LINEAR
	linear_sampler_state.repeat_u = RenderingDevice.SAMPLER_REPEAT_MODE_REPEAT
	linear_sampler_state.repeat_v = RenderingDevice.SAMPLER_REPEAT_MODE_REPEAT
	linear_sampler_state.repeat_w = RenderingDevice.SAMPLER_REPEAT_MODE_REPEAT
	linear_sampler = rd.sampler_create(linear_sampler_state)
	
	var linear_sampler_state_no_repeat = RDSamplerState.new()
	linear_sampler_state_no_repeat.min_filter = RenderingDevice.SAMPLER_FILTER_LINEAR
	linear_sampler_state_no_repeat.mag_filter = RenderingDevice.SAMPLER_FILTER_LINEAR
	linear_sampler_state_no_repeat.repeat_u = RenderingDevice.SAMPLER_REPEAT_MODE_CLAMP_TO_EDGE
	linear_sampler_state_no_repeat.repeat_v = RenderingDevice.SAMPLER_REPEAT_MODE_CLAMP_TO_EDGE
	linear_sampler_state_no_repeat.repeat_w = RenderingDevice.SAMPLER_REPEAT_MODE_CLAMP_TO_EDGE
	linear_sampler_no_repeat = rd.sampler_create(linear_sampler_state_no_repeat)
	
	if not dither_noise:
		dither_noise = ResourceLoader.load(\"res://addons/SunshineClouds2/NoiseTextures/bluenoise_Dither.png\")
	if not height_gradient:
		height_gradient = ResourceLoader.load(\"res://addons/SunshineClouds2/NoiseTextures/HeightGradient.tres\")
	if not extra_large_noise_patterns:
		extra_large_noise_patterns = ResourceLoader.load(\"res://addons/SunshineClouds2/NoiseTextures/ExtraLargeScaleNoise.tres\")
	if not large_scale_noise:
		large_scale_noise = ResourceLoader.load(\"res://addons/SunshineClouds2/NoiseTextures/LargeScaleNoise.tres\")
	if not medium_scale_noise:
		medium_scale_noise = ResourceLoader.load(\"res://addons/SunshineClouds2/NoiseTextures/MediumScaleNoise.tres\")
	if not small_scale_noise:
		small_scale_noise = ResourceLoader.load(\"res://addons/SunshineClouds2/NoiseTextures/SmallScaleNoise.tres\")
	if not curl_noise:
		curl_noise = ResourceLoader.load(\"res://addons/SunshineClouds2/NoiseTextures/curl_noise_varied.tga\")
	
	if not compute_shader:
		compute_shader = ResourceLoader.load(\"res://addons/SunshineClouds2/SunshineCloudsCompute.glsl\")
	if not pre_pass_compute_shader:
		pre_pass_compute_shader = ResourceLoader.load(\"res://addons/SunshineClouds2/SunshineCloudsPreCompute.glsl\")
	if not post_pass_compute_shader:
		post_pass_compute_shader = ResourceLoader.load(\"res://addons/SunshineClouds2/SunshineCloudsPostCompute.glsl\")
	if not compute_shader or not pre_pass_compute_shader or not post_pass_compute_shader:
		enabled = false
		printerr(\"No Shader found on load.\")
		clear_compute()
		return
	
	
	var prepass_shader_spirv = pre_pass_compute_shader.get_spirv()
	prepass_shader = rd.shader_create_from_spirv(prepass_shader_spirv)
	if prepass_shader.is_valid():
		prepass_pipeline = rd.compute_pipeline_create(prepass_shader)
	else:
		enabled = false
		printerr(\"Prepass Shader failed to compile.\")
		clear_compute()
		return
	
	
	var shader_spirv = compute_shader.get_spirv()
	shader = rd.shader_create_from_spirv(shader_spirv)
	if shader.is_valid():
		pipeline = rd.compute_pipeline_create(shader)
	else:
		enabled = false
		printerr(\"Shader failed to compile.\")
		clear_compute()
		return
	
	
	var postpass_shader_spirv = post_pass_compute_shader.get_spirv()
	postpass_shader = rd.shader_create_from_spirv(postpass_shader_spirv)
	if postpass_shader.is_valid():
		postpass_pipeline = rd.compute_pipeline_create(postpass_shader)
	else:
		enabled = false
		printerr(\"Post pass Shader failed to compile.\")
		clear_compute()
		return

func _render_callback(effect_callback_type, render_data):
	if rd == null:
		initialize_compute()
	elif pipeline.is_valid() and height_gradient and extra_large_noise_patterns and large_scale_noise and medium_scale_noise and small_scale_noise and dither_noise and curl_noise:
		buffers = render_data.get_render_scene_buffers() as RenderSceneBuffersRD
		if buffers:
			
			var msaa = buffers.get_msaa_3d() != 0
			if msaa:
				return
			
			var size = buffers.get_internal_size()
			if size.x == 0 and size.y == 0:
				return
			
			var resscale = int(pow(2.0, float(resolution_scale)))
			#match resolution_scale:
				#0: 
					#resscale = 1
				#1: 
					#resscale = 2
				#2: 
					#resscale = 4
				#3: 
					#resscale = 8
			
			var new_size = size / resscale
			var view_count = buffers.get_view_count()
			var rendersceneData : RenderSceneData = render_data.get_render_scene_data();
			
			if size != last_size or uniform_sets == null or uniform_sets.size() != view_count * 3 or color_images.size() == 0 or color_images[0] != buffers.get_color_layer(0):
				initialize_compute()
				
				accumulation_textures.clear()
				uniform_sets.clear()

				color_images.clear()
				msaa_color_images.clear()
				
				#print(\"postpass_push_constants\",postpass_push_constants.size())
				for view in range(view_count):
					color_images.append(buffers.get_color_layer(view, msaa))
					
					var depth_image : RID = buffers.get_depth_layer(view, msaa)
					
					var blankImageData : PackedByteArray = []
					blankImageData.resize(new_size.x * new_size.y * 4 * 4)
					
					var base_colorformat : RDTextureFormat = rd.texture_get_format(color_images[view])
					
					
					if (msaa):
						base_colorformat.usage_bits = RenderingDevice.TEXTURE_USAGE_STORAGE_BIT | RenderingDevice.TEXTURE_USAGE_SAMPLING_BIT | RenderingDevice.TEXTURE_USAGE_CAN_COPY_TO_BIT | RenderingDevice.TEXTURE_USAGE_CAN_COPY_FROM_BIT
						
						msaa_color_images.append(rd.texture_create(base_colorformat, RDTextureView.new(), []))
					
					base_colorformat.format = RenderingDevice.DATA_FORMAT_R32G32B32A32_SFLOAT
					base_colorformat.width = new_size.x
					base_colorformat.height = new_size.y
					
					accumulation_textures.append(rd.texture_create(base_colorformat, RDTextureView.new(), [blankImageData]))
					accumulation_textures.append(rd.texture_create(base_colorformat, RDTextureView.new(), [blankImageData]))
					accumulation_textures.append(rd.texture_create(base_colorformat, RDTextureView.new(), [blankImageData]))
					accumulation_textures.append(rd.texture_create(base_colorformat, RDTextureView.new(), [blankImageData]))
					accumulation_textures.append(rd.texture_create(base_colorformat, RDTextureView.new(), [blankImageData]))
					accumulation_textures.append(rd.texture_create(base_colorformat, RDTextureView.new(), [blankImageData]))
					
					#reflections
					accumulation_textures.append(rd.texture_create(base_colorformat, RDTextureView.new(), [blankImageData]))
					
					general_data_buffer = rd.uniform_buffer_create(256)
					
					var depthformat : RDTextureFormat = rd.texture_get_format(depth_image)
					depthformat.width = new_size.x
					depthformat.height = new_size.y
					depthformat.format = RenderingDevice.DATA_FORMAT_R32_SFLOAT
					depthformat.usage_bits = RenderingDevice.TEXTURE_USAGE_STORAGE_BIT | RenderingDevice.TEXTURE_USAGE_SAMPLING_BIT
					resized_depth = rd.texture_create(depthformat, RDTextureView.new(), [])
					
					#Prepass Compute Shader
					var prepass_uniforms_array : Array[RDUniform] = []
					var prepass_depth_uniform = RDUniform.new()
					prepass_depth_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					prepass_depth_uniform.binding = 0
					prepass_depth_uniform.add_id(nearest_sampler)
					prepass_depth_uniform.add_id(depth_image)
					prepass_uniforms_array.append(prepass_depth_uniform)
					
					var prepass_depth_output_uniform = RDUniform.new()
					prepass_depth_output_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					prepass_depth_output_uniform.binding = 1
					prepass_depth_output_uniform.add_id(resized_depth)
					prepass_uniforms_array.append(prepass_depth_output_uniform)
					
					var prepass_camera_uniform = RDUniform.new()
					prepass_camera_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_UNIFORM_BUFFER
					prepass_camera_uniform.binding = 2
					prepass_camera_uniform.add_id(general_data_buffer)
					prepass_uniforms_array.append(prepass_camera_uniform)
					
					uniform_sets.append(rd.uniform_set_create(prepass_uniforms_array, prepass_shader, 0))
					
					#Base Compute Shader
					var uniforms_array : Array[RDUniform] = []
					var output_data_uniform = RDUniform.new()
					output_data_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					output_data_uniform.binding = 0
					output_data_uniform.add_id(accumulation_textures[view * 7])
					uniforms_array.append(output_data_uniform)
					
					var output_color_uniform = RDUniform.new()
					output_color_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					output_color_uniform.binding = 1
					output_color_uniform.add_id(accumulation_textures[view * 7 + 1])
					uniforms_array.append(output_color_uniform)
					
					var accum1A_uniform = RDUniform.new()
					accum1A_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					accum1A_uniform.binding = 2
					accum1A_uniform.add_id(accumulation_textures[view * 7 + 2])
					uniforms_array.append(accum1A_uniform)
					
					var accum1B_uniform = RDUniform.new()
					accum1B_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					accum1B_uniform.binding = 3
					accum1B_uniform.add_id(accumulation_textures[view * 7 + 3])
					uniforms_array.append(accum1B_uniform)
					
					var accum2A_uniform = RDUniform.new()
					accum2A_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					accum2A_uniform.binding = 4
					accum2A_uniform.add_id(accumulation_textures[view * 7 + 4])
					uniforms_array.append(accum2A_uniform)
					
					var accum2B_uniform = RDUniform.new()
					accum2B_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					accum2B_uniform.binding = 5
					accum2B_uniform.add_id(accumulation_textures[view * 7 + 5])
					uniforms_array.append(accum2B_uniform)
					
					var depth_uniform = RDUniform.new()
					depth_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					depth_uniform.binding = 6
					depth_uniform.add_id(nearest_sampler)
					depth_uniform.add_id(resized_depth)
					uniforms_array.append(depth_uniform)
					
					var extra_noise_uniform = RDUniform.new()
					extra_noise_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					extra_noise_uniform.binding = 7
					extra_noise_uniform.add_id(linear_sampler)
					extra_noise_uniform.add_id(maskDrawnRid if extra_large_used_as_mask && maskDrawnRid.is_valid() else RenderingServer.texture_get_rd_texture(extra_large_noise_patterns.get_rid()))
					uniforms_array.append(extra_noise_uniform)
					
					var noise_uniform = RDUniform.new()
					noise_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					noise_uniform.binding = 8
					noise_uniform.add_id(linear_sampler)
					noise_uniform.add_id(RenderingServer.texture_get_rd_texture(large_scale_noise.get_rid()))
					uniforms_array.append(noise_uniform)
					
					var medium_noise_uniform = RDUniform.new()
					medium_noise_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					medium_noise_uniform.binding = 9
					medium_noise_uniform.add_id(linear_sampler)
					medium_noise_uniform.add_id(RenderingServer.texture_get_rd_texture(medium_scale_noise.get_rid()))
					uniforms_array.append(medium_noise_uniform)
					
					var small_noise_uniform = RDUniform.new()
					small_noise_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					small_noise_uniform.binding = 10
					small_noise_uniform.add_id(linear_sampler)
					small_noise_uniform.add_id(RenderingServer.texture_get_rd_texture(small_scale_noise.get_rid()))
					uniforms_array.append(small_noise_uniform)
					
					var curl_noise_uniform = RDUniform.new()
					curl_noise_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					curl_noise_uniform.binding = 11
					curl_noise_uniform.add_id(linear_sampler)
					curl_noise_uniform.add_id(RenderingServer.texture_get_rd_texture(curl_noise.get_rid()))
					uniforms_array.append(curl_noise_uniform)
					
					var dither_noise_uniform = RDUniform.new()
					dither_noise_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					dither_noise_uniform.binding = 12
					dither_noise_uniform.add_id(nearest_sampler)
					dither_noise_uniform.add_id(RenderingServer.texture_get_rd_texture(dither_noise.get_rid()))
					uniforms_array.append(dither_noise_uniform)
					
					var height_gradient_uniform = RDUniform.new()
					height_gradient_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					height_gradient_uniform.binding = 13
					height_gradient_uniform.add_id(linear_sampler_no_repeat)
					height_gradient_uniform.add_id(RenderingServer.texture_get_rd_texture(height_gradient.get_rid()))
					uniforms_array.append(height_gradient_uniform)
					
					
					var camera_uniform = RDUniform.new()
					camera_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_UNIFORM_BUFFER
					camera_uniform.binding = 14
					camera_uniform.add_id(general_data_buffer)
					uniforms_array.append(camera_uniform)
					
					light_data_buffer = rd.uniform_buffer_create(6272)
					var light_data_uniform = RDUniform.new()
					light_data_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_UNIFORM_BUFFER
					light_data_uniform.binding = 15
					light_data_uniform.add_id(light_data_buffer)
					uniforms_array.append(light_data_uniform)
					
					var sampleData : PackedByteArray = []
					sampleData.resize(512)
					point_sample_data_buffer = rd.storage_buffer_create(512, sampleData)
					var point_sample_data_uniform = RDUniform.new()
					point_sample_data_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_STORAGE_BUFFER
					point_sample_data_uniform.binding = 16
					point_sample_data_uniform.add_id(point_sample_data_buffer)
					uniforms_array.append(point_sample_data_uniform)
					
					var cameraData = rendersceneData.get_uniform_buffer()
					var camera_data_uniform = RDUniform.new()
					camera_data_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_UNIFORM_BUFFER
					camera_data_uniform.binding = 17
					camera_data_uniform.add_id(cameraData)
					uniforms_array.append(camera_data_uniform)
					
					uniform_sets.append(rd.uniform_set_create(uniforms_array, shader, 0))
					
					#Post Pass Compute Shader
					var postpass_uniforms_array : Array[RDUniform] = []
					var prepass_color_data_uniform = RDUniform.new()
					prepass_color_data_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					prepass_color_data_uniform.binding = 0
					prepass_color_data_uniform.add_id(linear_sampler_no_repeat)
					prepass_color_data_uniform.add_id(accumulation_textures[view * 7])
					postpass_uniforms_array.append(prepass_color_data_uniform)
					
					var prepass_color_uniform = RDUniform.new()
					prepass_color_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					prepass_color_uniform.binding = 1
					prepass_color_uniform.add_id(linear_sampler_no_repeat)
					prepass_color_uniform.add_id(accumulation_textures[view * 7 + 1])
					postpass_uniforms_array.append(prepass_color_uniform)
					
					
					var postpass_reflections_uniform = RDUniform.new()
					postpass_reflections_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					postpass_reflections_uniform.binding = 2
					postpass_reflections_uniform.add_id(accumulation_textures[view * 7 + 6])
					postpass_uniforms_array.append(postpass_reflections_uniform)
					
					if (reflections_globalshaderparam != \"\"):
						var newTexture = Texture2DRD.new()
						newTexture.texture_rd_rid = accumulation_textures[view * 7 + 6]
						RenderingServer.global_shader_parameter_set(reflections_globalshaderparam, newTexture)
					
					var postpass_color_uniform = RDUniform.new()
					postpass_color_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_IMAGE
					postpass_color_uniform.binding = 3
					postpass_color_uniform.add_id(msaa_color_images[view] if msaa else color_images[view])
					postpass_uniforms_array.append(postpass_color_uniform)
					
					var postpass_depth_uniform = RDUniform.new()
					postpass_depth_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_SAMPLER_WITH_TEXTURE
					postpass_depth_uniform.binding = 4
					postpass_depth_uniform.add_id(nearest_sampler)
					postpass_depth_uniform.add_id(depth_image)
					postpass_uniforms_array.append(postpass_depth_uniform)
					
					var postpass_camera_uniform = RDUniform.new()
					postpass_camera_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_UNIFORM_BUFFER
					postpass_camera_uniform.binding = 5
					postpass_camera_uniform.add_id(general_data_buffer)
					postpass_uniforms_array.append(postpass_camera_uniform)
					
					var postpass_light_data_uniform = RDUniform.new()
					postpass_light_data_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_UNIFORM_BUFFER
					postpass_light_data_uniform.binding = 6
					postpass_light_data_uniform.add_id(light_data_buffer)
					postpass_uniforms_array.append(postpass_light_data_uniform)
					
					var postpass_camera_data_uniform = RDUniform.new()
					postpass_camera_data_uniform.uniform_type = RenderingDevice.UNIFORM_TYPE_UNIFORM_BUFFER
					postpass_camera_data_uniform.binding = 7
					postpass_camera_data_uniform.add_id(cameraData)
					postpass_uniforms_array.append(postpass_camera_data_uniform)
					
					uniform_sets.append(rd.uniform_set_create(postpass_uniforms_array, postpass_shader, 0))
				
				lights_updated = true
			
			# Push constants and matrix updates
			#var ms = StreamPeerBuffer.new()
			#ms.put_float(new_size.x)
			#ms.put_float(new_size.y)
			#ms.put_float(large_noise_scale)
			#ms.put_float(medium_noise_scale)
			#
			#ms.put_float(current_time)
			#ms.put_float(clouds_coverage)
			#ms.put_float(clouds_density)
			#ms.put_float(clouds_detail_power)
			#
			#ms.put_float(lighting_density)
			#ms.put_float(accumulation_decay)
			#if (accumulation_is_a):
				#ms.put_float(1.0)
			#else:
				#ms.put_float(0.0)
			#ms.put_float(0.0)
			#push_constants = ms.get_data_array()
			
			
			
			var cameraTR : Transform3D = rendersceneData.get_cam_transform();
			var viewProj : Projection = rendersceneData.get_cam_projection();
			
			
			last_size = size
			
			update_matrices(cameraTR, viewProj, new_size)
			if lights_updated or directional_lights_data.size() == 0:
				update_lights()
			
			if (!positionQuerying && !positionResetting && positionQueries.size() > 0):
				encode_sample_points()
			
			var prepass_x_groups = ((size.x - 1) / 8) + 1
			var prepass_y_groups = ((size.y - 1) / 8) + 1
			var x_groups = ((size.x - 1) / 8 / resscale) + 1
			var y_groups = ((size.y - 1) / 8 / resscale) + 1
			
			for view in view_count:
				if (msaa):
					rd.texture_copy(color_images[view], msaa_color_images[view], Vector3.ZERO, Vector3.ZERO, Vector3(size.x, size.y, 0.0),0,0,0,0)
				
				var prepass_list = rd.compute_list_begin()
				rd.compute_list_bind_compute_pipeline(prepass_list, prepass_pipeline)
				rd.compute_list_bind_uniform_set(prepass_list, uniform_sets[view * 3], 0)
				rd.compute_list_dispatch(prepass_list, x_groups, y_groups, 1)
				rd.compute_list_end()

				var compute_list = rd.compute_list_begin()
				rd.compute_list_bind_compute_pipeline(compute_list, pipeline)
				rd.compute_list_bind_uniform_set(compute_list, uniform_sets[view * 3 + 1], 0)
				rd.compute_list_dispatch(compute_list, x_groups, y_groups, 1)
				rd.compute_list_end()

				var postpass_list = rd.compute_list_begin()
				rd.compute_list_bind_compute_pipeline(postpass_list, postpass_pipeline)
				rd.compute_list_bind_uniform_set(postpass_list, uniform_sets[view * 3 + 2], 0)
				rd.compute_list_dispatch(postpass_list, prepass_x_groups, prepass_y_groups, 1)
				rd.compute_list_end()
				
				if (msaa):
					rd.texture_copy(msaa_color_images[view], color_images[view], Vector3.ZERO, Vector3.ZERO, Vector3(size.x, size.y, 0.0),0,0,0,0)
				
			
			if (!positionResetting && positionQuerying):
				positionResetting = true
				rd.buffer_get_data_async(point_sample_data_buffer, retrieve_position_queries.bind())
			#call_deferred(\"update_callbacktype\", cameraTR.origin.y)
			#if (cameraTR.origin.y > cloud_floor):
				#if (self.effect_callback_type != CompositorEffect.EFFECT_CALLBACK_TYPE_POST_TRANSPARENT):
					#self.effect_callback_type = CompositorEffect.EFFECT_CALLBACK_TYPE_POST_TRANSPARENT
			#else:
				#if (self.effect_callback_type != CompositorEffect.EFFECT_CALLBACK_TYPE_PRE_TRANSPARENT):
					#self.effect_callback_type = CompositorEffect.EFFECT_CALLBACK_TYPE_PRE_TRANSPARENT

func retrieve_position_queries(data : PackedByteArray):
	
	var idx = 0
	while idx < 512 && positionQueryCallables.size() > 0:
		var position : Vector3 = Vector3.ZERO
		position.x = data.decode_float(idx)
		idx += 4
		position.y = data.decode_float(idx)
		idx += 4
		position.z = data.decode_float(idx)
		idx += 4
		var density = data.decode_float(idx)
		idx += 4
		
		positionQueryCallables[0].call(position, density)
		positionQueryCallables.remove_at(0)
		
	
	positionQuerying = false
	positionResetting = false


func update_callbacktype(lastY : float):
	if (lastY > cloud_floor):
		if (self.effect_callback_type != CompositorEffect.EFFECT_CALLBACK_TYPE_POST_TRANSPARENT):
			self.effect_callback_type = CompositorEffect.EFFECT_CALLBACK_TYPE_POST_TRANSPARENT
	else:
		if (self.effect_callback_type != CompositorEffect.EFFECT_CALLBACK_TYPE_PRE_TRANSPARENT):
			self.effect_callback_type = CompositorEffect.EFFECT_CALLBACK_TYPE_PRE_TRANSPARENT

func update_matrices(camera_tr, view_proj, new_size: Vector2i):
	if general_data.size() != 256: #64 * 4 bytes for each float = 256.
		general_data.resize(256)
	
	var idx = 0
	filter_index += 1
	if filter_index > 16:
		filter_index = 0
	# Camera matrix (16 floats)
	#general_data.encode_float(idx, camera_tr.basis.x.x); idx += 4
	#general_data.encode_float(idx, camera_tr.basis.x.y); idx += 4
	#general_data.encode_float(idx, camera_tr.basis.x.z); idx += 4
	#general_data.encode_float(idx, 0); idx += 4
	#
	#general_data.encode_float(idx, camera_tr.basis.y.x); idx += 4
	#general_data.encode_float(idx, camera_tr.basis.y.y); idx += 4
	#general_data.encode_float(idx, camera_tr.basis.y.z); idx += 4
	#general_data.encode_float(idx, 0); idx += 4
	#
	#general_data.encode_float(idx, camera_tr.basis.z.x); idx += 4
	#general_data.encode_float(idx, camera_tr.basis.z.y); idx += 4
	#general_data.encode_float(idx, camera_tr.basis.z.z); idx += 4
	#general_data.encode_float(idx, 0); idx += 4
	#
	#general_data.encode_float(idx, camera_tr.origin.x); idx += 4
	#general_data.encode_float(idx, camera_tr.origin.y); idx += 4
	#general_data.encode_float(idx, camera_tr.origin.z); idx += 4
	#general_data.encode_float(idx, 1.0); idx += 4
#
	## Previous or current camera matrix
	#var mat = camera_tr if first_run else last_view_mat
	#general_data.encode_float(idx, mat.basis.x.x); idx += 4
	#general_data.encode_float(idx, mat.basis.x.y); idx += 4
	#general_data.encode_float(idx, mat.basis.x.z); idx += 4
	#general_data.encode_float(idx, 0); idx += 4
	#
	#general_data.encode_float(idx, mat.basis.y.x); idx += 4
	#general_data.encode_float(idx, mat.basis.y.y); idx += 4
	#general_data.encode_float(idx, mat.basis.y.z); idx += 4
	#general_data.encode_float(idx, 0); idx += 4
	#
	#general_data.encode_float(idx, mat.basis.z.x); idx += 4
	#general_data.encode_float(idx, mat.basis.z.y); idx += 4
	#general_data.encode_float(idx, mat.basis.z.z); idx += 4
	#general_data.encode_float(idx, 0); idx += 4
	#
	#general_data.encode_float(idx, mat.origin.x); idx += 4
	#general_data.encode_float(idx, mat.origin.y); idx += 4
	#general_data.encode_float(idx, mat.origin.z); idx += 4
	#general_data.encode_float(idx, 1.0); idx += 4
#
	## Projection matrix (16 floats)
	#general_data.encode_float(idx, view_proj.x.x); idx += 4
	#general_data.encode_float(idx, view_proj.x.y); idx += 4
	#general_data.encode_float(idx, view_proj.x.z); idx += 4
	#general_data.encode_float(idx, view_proj.x.w); idx += 4
	#
	#general_data.encode_float(idx, view_proj.y.x); idx += 4
	#general_data.encode_float(idx, view_proj.y.y); idx += 4
	#general_data.encode_float(idx, view_proj.y.z); idx += 4
	#general_data.encode_float(idx, view_proj.y.w); idx += 4
	#
	#general_data.encode_float(idx, view_proj.z.x); idx += 4
	#general_data.encode_float(idx, view_proj.z.y); idx += 4
	#general_data.encode_float(idx, view_proj.z.z); idx += 4
	#general_data.encode_float(idx, view_proj.z.w); idx += 4
	#
	#general_data.encode_float(idx, view_proj.w.x); idx += 4
	#general_data.encode_float(idx, view_proj.w.y); idx += 4
	#general_data.encode_float(idx, view_proj.w.z); idx += 4
	#general_data.encode_float(idx, view_proj.w.w); idx += 4
#
	## Previous or current camera matrix
	#var proj = view_proj if first_run else last_projection_mat
	#general_data.encode_float(idx, proj.x.x); idx += 4
	#general_data.encode_float(idx, proj.x.y); idx += 4
	#general_data.encode_float(idx, proj.x.z); idx += 4
	#general_data.encode_float(idx, proj.x.w); idx += 4
	#
	#general_data.encode_float(idx, proj.y.x); idx += 4
	#general_data.encode_float(idx, proj.y.y); idx += 4
	#general_data.encode_float(idx, proj.y.z); idx += 4
	#general_data.encode_float(idx, proj.y.w); idx += 4
	#
	#general_data.encode_float(idx, proj.z.x); idx += 4
	#general_data.encode_float(idx, proj.z.y); idx += 4
	#general_data.encode_float(idx, proj.z.z); idx += 4
	#general_data.encode_float(idx, proj.z.w); idx += 4
	#
	#general_data.encode_float(idx, proj.w.x); idx += 4
	#general_data.encode_float(idx, proj.w.y); idx += 4
	#general_data.encode_float(idx, proj.w.z); idx += 4
	#general_data.encode_float(idx, proj.w.w); idx += 4
#
	#last_projection_mat = view_proj
	#last_view_mat = camera_tr
	accumulation_is_a = not accumulation_is_a
	first_run = false
	
	# Additional data (44 floats)
	var width = mask_width_km * 1000.0
	
	if (extra_large_used_as_mask):
		general_data.encode_float(idx, origin_offset.x + (width * 0.5) * -1.0); idx += 4
		general_data.encode_float(idx, origin_offset.y + (width * 0.5) * -1.0); idx += 4
		general_data.encode_float(idx, origin_offset.z + (width * 0.5) * -1.0); idx += 4
		general_data.encode_float(idx, width); idx += 4
	else:
		general_data.encode_float(idx, extra_large_scale_clouds_position.x); idx += 4
		general_data.encode_float(idx, extra_large_scale_clouds_position.y); idx += 4
		general_data.encode_float(idx, extra_large_scale_clouds_position.z); idx += 4
		general_data.encode_float(idx, extra_large_noise_scale); idx += 4
	
	#general_data.encode_float(idx, extra_large_scale_clouds_position.x); idx += 4
	#general_data.encode_float(idx, extra_large_scale_clouds_position.y); idx += 4
	#general_data.encode_float(idx, extra_large_scale_clouds_position.z); idx += 4
	#general_data.encode_float(idx, extra_large_noise_scale); idx += 4
	#
	general_data.encode_float(idx, large_scale_clouds_position.x); idx += 4
	general_data.encode_float(idx, large_scale_clouds_position.y); idx += 4
	general_data.encode_float(idx, large_scale_clouds_position.z); idx += 4
	general_data.encode_float(idx, lighting_sharpness); idx += 4

	general_data.encode_float(idx, medium_scale_clouds_position.x); idx += 4
	general_data.encode_float(idx, medium_scale_clouds_position.y); idx += 4
	general_data.encode_float(idx, medium_scale_clouds_position.z); idx += 4
	general_data.encode_float(idx, lighting_travel_distance); idx += 4

	general_data.encode_float(idx, detail_clouds_position.x); idx += 4
	general_data.encode_float(idx, detail_clouds_position.y); idx += 4
	general_data.encode_float(idx, detail_clouds_position.z); idx += 4
	general_data.encode_float(idx, atmospheric_density); idx += 4

	general_data.encode_float(idx, cloud_ambient_color.r * cloud_ambient_tint.r); idx += 4
	general_data.encode_float(idx, cloud_ambient_color.g * cloud_ambient_tint.g); idx += 4
	general_data.encode_float(idx, cloud_ambient_color.b * cloud_ambient_tint.b); idx += 4
	general_data.encode_float(idx, cloud_ambient_color.a * cloud_ambient_tint.a); idx += 4

	general_data.encode_float(idx, ambient_occlusion_color.r); idx += 4
	general_data.encode_float(idx, ambient_occlusion_color.g); idx += 4
	general_data.encode_float(idx, ambient_occlusion_color.b); idx += 4
	general_data.encode_float(idx, ambient_occlusion_color.a); idx += 4

	general_data.encode_float(idx, atmosphere_color.r); idx += 4
	general_data.encode_float(idx, atmosphere_color.g); idx += 4
	general_data.encode_float(idx, atmosphere_color.b); idx += 4
	general_data.encode_float(idx, atmosphere_color.a); idx += 4

	general_data.encode_float(idx, small_noise_scale); idx += 4
	general_data.encode_float(idx, min_step_distance); idx += 4
	general_data.encode_float(idx, max_step_distance); idx += 4
	general_data.encode_float(idx, lod_bias); idx += 4

	general_data.encode_float(idx, clouds_sharpness); idx += 4
	general_data.encode_float(idx, float(directional_lights_data.size()) / 2.0); idx += 4
	general_data.encode_float(idx, clouds_powder); idx += 4
	general_data.encode_float(idx, clouds_anisotropy); idx += 4

	general_data.encode_float(idx, cloud_floor); idx += 4
	general_data.encode_float(idx, cloud_ceiling); idx += 4
	general_data.encode_float(idx, float(max_step_count)); idx += 4
	general_data.encode_float(idx, float(max_lighting_steps)); idx += 4

	general_data.encode_float(idx, float(filter_index)); idx += 4
	general_data.encode_float(idx, float(blur_power)); idx += 4
	general_data.encode_float(idx, float(blur_quality)); idx += 4
	general_data.encode_float(idx, float(curl_noise_strength)); idx += 4
	
	general_data.encode_float(idx, wind_direction.x); idx += 4
	general_data.encode_float(idx, wind_direction.z); idx += 4
	general_data.encode_float(idx, fog_effect_ground); idx += 4
	general_data.encode_float(idx, positionQueries.size()); idx += 4
	
	general_data.encode_float(idx, float(point_lights_data.size()) / 2.0); idx += 4
	general_data.encode_float(idx, float(point_effector_data.size()) / 2.0); idx += 4
	general_data.encode_float(idx, wind_swept_range); idx += 4
	general_data.encode_float(idx, wind_swept_strength); idx += 4
	
	general_data.encode_float(idx, new_size.x); idx += 4
	general_data.encode_float(idx, new_size.y); idx += 4
	general_data.encode_float(idx, large_noise_scale); idx += 4
	general_data.encode_float(idx, medium_noise_scale); idx += 4
	
	general_data.encode_float(idx, current_time); idx += 4
	general_data.encode_float(idx, clouds_coverage); idx += 4
	general_data.encode_float(idx, clouds_density); idx += 4
	general_data.encode_float(idx, clouds_detail_power); idx += 4
	
	general_data.encode_float(idx, lighting_density); idx += 4
	general_data.encode_float(idx, accumulation_decay); idx += 4
	if (accumulation_is_a):
		general_data.encode_float(idx, 1.0); idx += 4
	else:
		general_data.encode_float(idx, 0.0); idx += 4
	general_data.encode_float(idx, int(pow(2.0, float(resolution_scale)))); idx += 4
	#
	#general_data.encode_float(idx, last_size.x); idx += 4
	#general_data.encode_float(idx, last_size.y); idx += 4
	#general_data.encode_float(idx, 0.0); idx += 4
	#general_data.encode_float(idx, 0.0); idx += 4
	
	# Copy to byte buffer
	rd.buffer_update(general_data_buffer, 0, general_data.size(), general_data)


func update_lights():
	lights_updated = false
	
	if light_data.size() != 6272: #32 + 1024 + 512 * 4 bytes for each float = 6272.
		light_data.resize(6272)
	
	if (directional_lights_data.size() == 0): #defaults to having a default light.
		directional_lights_data.append(Vector4(0.5, 1.0, 0.5, 16.0))
		directional_lights_data.append(Vector4(1.0, 1.0, 1.0, 1.0))
	
	var idx = 0
	for i in range(min(directional_lights_data.size(), 8)):
		light_data.encode_float(idx, directional_lights_data[i].x)
		idx += 4
		light_data.encode_float(idx, directional_lights_data[i].y)
		idx += 4
		light_data.encode_float(idx, directional_lights_data[i].z)
		idx += 4
		light_data.encode_float(idx, directional_lights_data[i].w)
		idx += 4
	
	
	idx = 128
	for i in range(min(point_lights_data.size(), 256)):
		light_data.encode_float(idx, point_lights_data[i].x)
		idx += 4
		light_data.encode_float(idx, point_lights_data[i].y)
		idx += 4
		light_data.encode_float(idx, point_lights_data[i].z)
		idx += 4
		light_data.encode_float(idx, point_lights_data[i].w)
		idx += 4
	
	idx = 4224
	for i in range(min(point_effector_data.size(), 128)):
		light_data.encode_float(idx, point_effector_data[i].x)
		idx += 4
		light_data.encode_float(idx, point_effector_data[i].y)
		idx += 4
		light_data.encode_float(idx, point_effector_data[i].z)
		idx += 4
		light_data.encode_float(idx, point_effector_data[i].w)
		idx += 4
	
	rd.buffer_update(light_data_buffer, 0, light_data.size(), light_data)

func encode_sample_points():
	positionQuerying = true
	var sample_points_data_floats : PackedByteArray = []
	sample_points_data_floats.resize(512)
	
	var idx = 0
	while idx < 512 && positionQueries.size() > 0:
		
		sample_points_data_floats.encode_float(idx, positionQueries[0].x)
		idx += 4
		sample_points_data_floats.encode_float(idx, positionQueries[0].y)
		idx += 4
		sample_points_data_floats.encode_float(idx, positionQueries[0].z)
		idx += 4
		sample_points_data_floats.encode_float(idx, 0.0)
		idx += 4
		positionQueries.remove_at(0)
	
	
	rd.buffer_update(point_sample_data_buffer, 0, sample_points_data_floats.size(), sample_points_data_floats)
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_j7bl3"]
noise_type = 2
seed = 2
frequency = 0.0727

[sub_resource type="NoiseTexture3D" id="NoiseTexture3D_gi3g0"]
width = 128
height = 128
depth = 128
seamless = true
seamless_blend_skirt = 0.2
noise = SubResource("FastNoiseLite_j7bl3")

[sub_resource type="CompositorEffect" id="CompositorEffect_6sh32"]
resource_local_to_scene = false
resource_name = ""
enabled = false
effect_callback_type = 3
access_resolved_color = true
access_resolved_depth = true
needs_motion_vectors = true
needs_normal_roughness = false
script = SubResource("GDScript_434j5")
clouds_coverage = 0.6
clouds_density = 1.0
atmospheric_density = 0.5
lighting_density = 0.55
fog_effect_ground = 1.0
clouds_anisotropy = 0.3
clouds_powder = 0.5
cloud_ambient_color = Color(0.352, 0.624, 0.784, 1)
cloud_ambient_tint = Color(0.352, 0.624, 0.784, 1)
atmosphere_color = Color(0.801, 0.893, 0.962, 1)
ambient_occlusion_color = Color(0.17, 0.044, 0.027, 0.549)
accumulation_decay = 0.5
extra_large_noise_scale = 320000.0
large_noise_scale = 50000.0
medium_noise_scale = 6000.0
small_noise_scale = 2500.0
clouds_sharpness = 1.0
clouds_detail_power = 0.9
curl_noise_strength = 5000.0
lighting_sharpness = 0.05
wind_swept_range = 0.5
wind_swept_strength = 500.0
cloud_floor = 1500.0
cloud_ceiling = 25000.0
max_step_count = 50.0
max_lighting_steps = 32.0
resolution_scale = null
lod_bias = 1.0
dither_noise = SubResource("CompressedTexture3D_rhxyi")
height_gradient = SubResource("GradientTexture1D_pwfjq")
extra_large_noise_patterns = SubResource("NoiseTexture2D_ch57t")
large_scale_noise = SubResource("NoiseTexture3D_xalux")
medium_scale_noise = SubResource("NoiseTexture3D_usxnw")
small_scale_noise = SubResource("NoiseTexture3D_gi3g0")
curl_noise = SubResource("CompressedTexture3D_dklm3")
dither_speed = 100.825
blur_power = 2.0
blur_quality = 1.0
reflections_globalshaderparam = ""
min_step_distance = 100.0
max_step_distance = 600.0
lighting_travel_distance = 5000.0
extra_large_used_as_mask = false
mask_width_km = 32.0
post_pass_compute_shader = SubResource("RDShaderFile_qonno")
origin_offset = Vector3(0, 0, 0)
wind_direction = Vector3(1, 0, 1)
directional_lights_data = Array[Vector4]([Vector4(0.5, 1, 0.5, 16), Vector4(1, 1, 1, 1)])
point_lights_data = Array[Vector4]([])
point_effector_data = Array[Vector4]([])

[sub_resource type="Compositor" id="Compositor_d3jkd"]
compositor_effects = Array[CompositorEffect]([SubResource("CompositorEffect_6sh32")])

[sub_resource type="BoxShape3D" id="BoxShape3D_dwgg1"]
size = Vector3(1, 1000, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_ru4tf"]
size = Vector3(1000, 1, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_6sh32"]

[node name="Node3D" type="Node3D"]

[node name="Player" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 2, 0)
script = ExtResource("1_ru4tf")

[node name="Sprite3D" type="Sprite3D" parent="Player"]
transform = Transform3D(6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 1, 0)
visible = false
billboard = 1
texture = ExtResource("1_wwpf4")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Player"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("BoxShape3D_wwpf4")

[node name="Body" parent="Player" instance=ExtResource("3_dwgg1")]

[node name="GridMap" type="GridMap" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4, 1, 0)
mesh_library = ExtResource("1_g2h75")
cell_size = Vector3(1, 1, 1)
cell_center_y = false
cell_center_z = false
data = {
"cells": PackedInt32Array(1, 0, 2, 2, 0, 2, 3, 0, 2, 4, 0, 2, 5, 0, 2, 0, 0, 2, 7, 0, 1, 131080, 0, 2, 131081, 0, 2, 8, 0, 1, 9, 0, 1, 10, 0, 1, 65546, 0, 1, 65545, 0, 1, 65544, 0, 1, 65547, 0, 1, 131083, 0, 1, 196619, 0, 2, 11, 0, 1, 65535, 0, 2, 65534, 0, 2, 65533, 0, 2, 65532, 0, 2, -4, 0, 1, -3, 0, 1, -2, 0, 1, -1, 0, 1, -65536, 0, 1, -65535, 0, 1, -65534, 0, 1, -65533, 0, 1, -65532, 0, 1, -65531, 0, 1, -65530, 0, 1, -65529, 0, 1, -65528, 0, 1, -65527, 0, 1, -65526, 0, 1, -65525, 0, 1, 65531, 0, 2, 65530, 0, 2, 65529, 0, 2, 65528, 0, 2, 65527, 0, 2, -9, 0, 1, -8, 0, 1, -7, 0, 1, -6, 0, 1, -5, 0, 1, -65545, 0, 1, -131081, 0, 1, -131080, 0, 1, -131079, 0, 1, -131078, 0, 1, -131077, 0, 1, -131076, 0, 1, -131075, 0, 1, -131074, 0, 1, -131073, 0, 1, -196608, 0, 1, -196607, 0, 1, -196606, 0, 1, -196605, 0, 1, -196604, 0, 1, -196603, 0, 1, -196602, 0, 1, -131066, 0, 1, -131065, 0, 1, -131064, 0, 1, -131063, 0, 13, -131062, 0, 1, -131061, 0, 1, -196597, 0, 1, -196598, 0, 1, -196599, 0, 1, -196600, 0, 1, -196601, 0, 1, -131067, 0, 1, -131068, 0, 1, -131069, 0, 1, -131070, 0, 1, -131071, 0, 1, -131072, 0, 1, -65537, 0, 1, -65538, 0, 1, -65539, 0, 1, -65540, 0, 1, -65541, 0, 1, -65542, 0, 1, -65543, 0, 1, -65544, 0, 1, 65526, 0, 2, -10, 0, 1, -65546, 0, 1, -131082, 0, 1, -131083, 0, 1, -65547, 0, 1, -11, 0, 1, 65525, 0, 2, 6, 0, 1, 131082, 0, 1, 65542, 0, 1048581, 131079, 0, 1048581, 196618, 0, 1048581, 65543, 0, 1, 65539, 0, 10, 65538, 0, 10, 65537, 0, 9, 65540, 0, 11, 131061, 0, 16, 131062, 0, 16, 131063, 0, 16, 131064, 0, 16, 131065, 0, 16, 131066, 0, 16, 131067, 0, 16, 131068, 0, 16, 131069, 0, 16, 131070, 0, 16, 196620, 0, 2, 196621, 0, 2, 196622, 0, 2, -196596, 0, 1, -131060, 0, 1, -65524, 0, 1, 12, 0, 1, 65548, 0, 1, 131084, 0, 1, -196595, 0, 1, -131059, 0, 1, -65523, 0, 1, 13, 0, 1, 65549, 0, 1048590, 131085, 0, 1, -196594, 0, 1, -131058, 0, 1, -65522, 0, 1, 14, 0, 1, 65550, 0, 1, 131086, 0, 1, 196623, 0, 1441797, 131088, 0, 1441797, 65553, 0, 1441797, 18, 0, 1441794, 19, 0, 1441794, 20, 0, 1441794, 21, 0, 1441794, 131087, 0, 1441793, 65551, 0, 1441793, 15, 0, 1441793, 16, 0, 1441793, 17, 0, 1441793, 65552, 0, 1441793, -196593, 0, 1441793, -131057, 0, 1441793, -65521, 0, 1441793, -196592, 0, 1441793, -131056, 0, 14, -65520, 0, 1441793, -196591, 0, 1441793, -131055, 0, 1441793, -65519, 0, 1441793, -196590, 0, 1441793, -131054, 0, 1441793, -65518, 0, 1441793, -196589, 0, 1441793, -131053, 0, 1441793, -65517, 0, 1441793, -196588, 0, 1441793, -131052, 0, 1441793, -65516, 0, 1441793, -196587, 0, 1441793, -131051, 0, 1441793, -65515, 0, 1441793, 22, 0, 1441800, 27, 0, 1048584, 65565, 0, 1048584, -65514, 0, 1, -65513, 0, 1, -131049, 0, 1, -196585, 0, 1, -196586, 0, 1, -131050, 0, 1, 28, 0, 1, 29, 0, 1, -65507, 0, 1, -131043, 0, 1, -196579, 0, 1, -196580, 0, 1, -196581, 0, 1, -196582, 0, 1, -131046, 0, 1, -65510, 0, 1, -65509, 0, 1, -131045, 0, 1, -131044, 0, 1, -65508, 0, 1, -196578, 0, 1, -196577, 0, 1, -196576, 0, 1, -196575, 0, 1, -131039, 0, 1, -131040, 0, 1, -131041, 0, 1, -131042, 0, 1, -65506, 0, 1, -65505, 0, 1, -65504, 0, 1, -65503, 0, 1, 33, 0, 1, 32, 0, 1, 31, 0, 1, 30, 0, 1, 65566, 0, 2, 65567, 0, 2, 65568, 0, 2, 65569, 0, 2, 65555, 0, 16, 65557, 0, 655376, 23, 0, 12, 196642, 0, 1048581, -196574, 0, 1, -131038, 0, 1, -65502, 0, 1, 34, 0, 1, 65570, 0, 1, 131106, 0, 1, 131107, 0, 1, 65571, 0, 1, 35, 0, 1, -65501, 0, 1, -131037, 0, 1, -196573, 0, 1, 196643, 0, 2, 327716, 0, 1048578, 327717, 0, 1048578, 262180, 0, 1048577, 262181, 0, 1048577, 196645, 0, 1048577, 131109, 0, 1048577, 65573, 0, 1048577, 37, 0, 1048577, -65499, 0, 1048577, -131035, 0, 1048577, -131036, 0, 1048577, -196572, 0, 1048577, -196571, 0, 1048577, -65500, 0, 1048577, 36, 0, 1048577, 65572, 0, 1048577, 131108, 0, 1048577, 196644, 0, 1048577, 196649, 0, 1048580, 131115, 0, 1048583, 131119, 0, 1, 196657, 0, 1, 131116, 0, 1, 131117, 0, 1, 131118, 0, 1, 196654, 0, 1, 196650, 0, 1, 196651, 0, 1, 196652, 0, 1441806, 196653, 0, 1, 196655, 0, 1048590, 196656, 0, 1, 131120, 0, 1441799, 196658, 0, 1441796, 262185, 0, 1048577, 262186, 0, 1048577, 262187, 0, 1048577, 262188, 0, 1048577, 262189, 0, 1048577, 262190, 0, 1048577, 262191, 0, 1048577, 262192, 0, 1048577, 262193, 0, 1048577, 262194, 0, 1048577, 327721, 0, 1048577, 327722, 0, 13, 327723, 0, 1048577, 327724, 0, 1048577, 327725, 0, 1048577, 327726, 0, 1048577, 327727, 0, 1048577, 327728, 0, 1048577, 327729, 0, 13, 327730, 0, 1048577, 393256, 0, 1048577, 393257, 0, 1048577, 393258, 0, 1048577, 393259, 0, 1048577, 393260, 0, 14, 393261, 0, 1048577, 393262, 0, 1048577, 393263, 0, 655374, 393264, 0, 1048577, 393265, 0, 1048577, 393266, 0, 1048577, 393267, 0, 1048577, 458792, 0, 1048578, 458793, 0, 1048578, 458794, 0, 1048578, 458795, 0, 1048578, 458796, 0, 1048578, 458797, 0, 1048578, 458798, 0, 1048578, 458799, 0, 1048578, 458800, 0, 1048578, 458801, 0, 1048578, 458802, 0, 1048578, 458803, 0, 1048578, 524332, 0, 9, 524335, 0, 11, 524333, 0, 10, 524334, 0, 10, 524328, 0, 655372, 524339, 0, 12, 524329, 0, 16, 524330, 0, 16, 524331, 0, 16, 524336, 0, 655376, 524337, 0, 655376, 524338, 0, 655376, 131102, 0, 655371, 131103, 0, 655369, 26, 0, 655372, 262179, 0, 9, 393252, 0, 655371, 393253, 0, 655369, 131105, 0, 9, 65564, 0, 655372, 327736, 0, 2, 327737, 0, 2, 327738, 0, 2, 327739, 0, 2, 327740, 0, 2, 327741, 0, 2, 393279, 0, 1048584, 458816, 0, 1048581, 589889, 0, 1048595, 655426, 0, 1048581, 720964, 0, 1048584, 720965, 0, 1048578, 720966, 0, 1048578, 65595, 0, 1048596, 196667, 0, 1, 262203, 0, 1, 262204, 0, 1, 196668, 0, 1, 131132, 0, 1, 65596, 0, 1, 60, 0, 1, -65476, 0, 1, -65475, 0, 1, -65474, 0, 1, -65473, 0, 1, -65472, 0, 1, -65471, 0, 1, -65470, 0, 1, -65469, 0, 1, -65468, 0, 1, -65467, 0, 1, -65466, 0, 1, 70, 0, 1, 65606, 0, 1, 131142, 0, 1, 196678, 0, 1, 262214, 0, 1, 327750, 0, 1, 327749, 0, 1, 393285, 0, 1, 458821, 0, 1441793, 524357, 0, 1048590, 589893, 0, 1, 655429, 0, 1, 655430, 0, 1, 589894, 0, 1, 524358, 0, 1, 458822, 0, 1, 393286, 0, 1, 655428, 0, 1, 655427, 0, 1, 589891, 0, 1, 589890, 0, 1, 524354, 0, 1, 524355, 0, 1, 589892, 0, 1, 524356, 0, 1, 458820, 0, 1, 393284, 0, 1, 393283, 0, 1, 458819, 0, 655374, 458818, 0, 1, 458817, 0, 1, 393281, 0, 1, 393280, 0, 1, 393282, 0, 1, 327748, 0, 1, 327747, 0, 1, 327746, 0, 14, 327745, 0, 1, 327744, 0, 1, 327743, 0, 1, 327742, 0, 1, 262205, 0, 1, 196669, 0, 1, 131133, 0, 1048590, 65597, 0, 1, 61, 0, 1, 62, 0, 1, 63, 0, 1, 64, 0, 1, 65, 0, 1, 66, 0, 1, 65602, 0, 1, 65603, 0, 1, 65604, 0, 1441806, 65605, 0, 1, 69, 0, 1, 68, 0, 1, 67, 0, 1, 131140, 0, 1, 131141, 0, 1, 196677, 0, 1, 262213, 0, 1, 262212, 0, 655374, 196676, 0, 1, 196675, 0, 1, 131139, 0, 1, 131138, 0, 1, 131137, 0, 1, 65601, 0, 1, 65600, 0, 1, 196674, 0, 1, 262211, 0, 1, 196673, 0, 14, 196672, 0, 1, 131136, 0, 1, 131135, 0, 1, 65599, 0, 1, 65598, 0, 13, 262210, 0, 1, 262209, 0, 1, 262208, 0, 1, 196671, 0, 1, 196670, 0, 1, 131134, 0, 1, 262207, 0, 1, 262206, 0, 1, 262201, 0, 1048583, 196666, 0, 1048580, 262202, 0, 1441806, 720967, 0, 1048578, 720968, 0, 1048578, 720969, 0, 1048578, 720970, 0, 1048578, 720971, 0, 1048578, 655435, 0, 1048577, 655434, 0, 1048577, 655433, 0, 1048577, 655432, 0, 1048577, 655431, 0, 1048577, 458826, 0, 1441796, 393289, 0, 1441796, 131143, 0, 1441793, 262215, 0, 1441793, 327751, 0, 1441793, 393287, 0, 1441793, 458823, 0, 1441793, 458824, 0, 1441793, 393288, 0, 1441793, 524360, 0, 1441793, 524361, 0, 1441793, 458825, 0, 1441793, 589897, 0, 1441793, 589898, 0, 1441793, 524362, 0, 1441793, 524359, 0, 1441793, 589896, 0, 13, 589895, 0, 1441793, -65465, 0, 1441793, 71, 0, 1441793, 65607, 0, 1441793, 196679, 0, 1441793, 393275, 0, 655371, 393276, 0, 655370, 393277, 0, 655369, 393278, 0, 12, 524353, 0, 12, 720963, 0, 16, 786503, 0, 9, 786504, 0, 655369, 786505, 0, 9, 786506, 0, 655369, 589903, 0, 2, 589904, 0, 2, 458833, 0, 2, 458834, 0, 2, 458835, 0, 2, 720980, 0, 2, 720981, 0, 2, 720982, 0, 2, 458836, 0, 2, 458837, 0, 2, 458838, 0, 2, 458839, 0, 2, 458840, 0, 2, 524379, 0, 2, 589918, 0, 2, 655455, 0, 2, 655456, 0, 2, 655457, 0, 2, 655458, 0, 2, 524367, 0, 1, 524368, 0, 1, 458832, 0, 1441806, 458831, 0, 1, 393295, 0, 1, 327759, 0, 1, 327760, 0, 1, 393296, 0, 1, 262223, 0, 1, 262224, 0, 1, -65457, 0, 1, -65456, 0, 1, 80, 0, 1, 65616, 0, 1, 131152, 0, 1, 196688, 0, 1, 196687, 0, 1, 131151, 0, 1, 65615, 0, 1, 79, 0, 1, 393297, 0, 1, 393298, 0, 1, 393299, 0, 1, 393300, 0, 1, 393301, 0, 1, 393302, 0, 1, 393303, 0, 1, 393304, 0, 1, 393305, 0, 1, 393306, 0, 1, 393307, 0, 1, 393308, 0, 1, 393309, 0, 1, 393310, 0, 1048590, 393311, 0, 1, 458849, 0, 1, 458850, 0, 1, 524386, 0, 1, 589922, 0, 1, 589921, 0, 1, 589920, 0, 1, 589919, 0, 1, 524383, 0, 1, 524385, 0, 1, 524384, 0, 655374, 524382, 0, 1, 458845, 0, 1, 458844, 0, 1, 524380, 0, 1, 524381, 0, 1, 458843, 0, 1, 458842, 0, 1, 458841, 0, 1, 327772, 0, 13, 327773, 0, 1, 327774, 0, 1, 327775, 0, 1, 327776, 0, 1, 327777, 0, 1, 327778, 0, 1, 262242, 0, 1, 196706, 0, 1, 131170, 0, 1, 65634, 0, 1, 98, 0, 1, -65438, 0, 1, -65439, 0, 1, -65440, 0, 1048590, -65441, 0, 1, -65442, 0, 1, -65443, 0, 1, -65444, 0, 1, -65445, 0, 1, -65446, 0, 1, -65447, 0, 1, -65448, 0, 1, -65449, 0, 1, -65450, 0, 1, -65451, 0, 1048590, -65452, 0, 1, -65453, 0, 1, -65454, 0, 1, -65455, 0, 1, 81, 0, 14, 82, 0, 1, 83, 0, 1, 84, 0, 1, 85, 0, 1, 86, 0, 1, 87, 0, 1, 88, 0, 1, 89, 0, 1, 90, 0, 1, 91, 0, 1, 92, 0, 14, 93, 0, 1, 94, 0, 1, 95, 0, 1, 96, 0, 1, 97, 0, 1, 65633, 0, 1, 65632, 0, 1, 65631, 0, 1, 65630, 0, 1, 65629, 0, 1, 65628, 0, 1, 65627, 0, 1, 65626, 0, 1, 65625, 0, 1, 65624, 0, 1, 65623, 0, 1, 65622, 0, 1, 65621, 0, 1, 65620, 0, 1, 65619, 0, 1, 65618, 0, 1, 131154, 0, 1, 131153, 0, 1, 65617, 0, 1, 131156, 0, 1, 131157, 0, 1, 131158, 0, 1, 131159, 0, 1, 131160, 0, 1, 131161, 0, 1, 131162, 0, 655374, 131163, 0, 1, 131164, 0, 1, 131165, 0, 1, 131166, 0, 1441806, 131167, 0, 1, 131168, 0, 1, 131169, 0, 1, 196705, 0, 1, 262241, 0, 1, 262240, 0, 1, 196704, 0, 1, 196703, 0, 1, 262239, 0, 1, 262238, 0, 1, 262237, 0, 1, 262236, 0, 1, 196700, 0, 1, 196701, 0, 1, 196702, 0, 1, 196699, 0, 1, 196698, 0, 1, 196697, 0, 1, 131155, 0, 1, 196689, 0, 1, 262225, 0, 1, 262226, 0, 1, 262227, 0, 13, 262228, 0, 1, 262229, 0, 1, 262230, 0, 1, 327766, 0, 1, 327767, 0, 1, 327768, 0, 1, 327769, 0, 1, 327770, 0, 1, 327771, 0, 1, 262235, 0, 1, 262234, 0, 1, 262233, 0, 1, 262232, 0, 14, 262231, 0, 1, 196694, 0, 1, 196693, 0, 1441806, 196692, 0, 1, 196691, 0, 1, 196690, 0, 655374, 327762, 0, 1, 327763, 0, 1, 327764, 0, 1, 196696, 0, 1, 196695, 0, 1, 327765, 0, 1, 327761, 0, 1, -131012, 0, 1, -196548, 0, 1, -196547, 0, 1, -196546, 0, 1, -196545, 0, 1, -196544, 0, 1, -196543, 0, 1, -196542, 0, 1, -196541, 0, 1, -196540, 0, 1, -196539, 0, 1, -196538, 0, 1, -196537, 0, 1, -131001, 0, 1, -131002, 0, 1, -131003, 0, 1, -131004, 0, 1, -131005, 0, 1, -131006, 0, 1, -131007, 0, 1, -131011, 0, 1, -131010, 0, 1, -131009, 0, 1, -131008, 0, 1, -130992, 0, 1, -130993, 0, 1, -196529, 0, 1, -196528, 0, 1, -196527, 0, 1, -196526, 0, 1, -196525, 0, 1, -196524, 0, 1, -196523, 0, 1, -130987, 0, 1, -130986, 0, 1, -130985, 0, 1, -130984, 0, 1, -130983, 0, 1, -130982, 0, 1, -130981, 0, 1, -130980, 0, 1, -130979, 0, 1, -130978, 0, 1, -130977, 0, 1, -130976, 0, 1, -130975, 0, 1, -196511, 0, 1, -196510, 0, 1, -130974, 0, 1, -196512, 0, 1, -196513, 0, 1, -196514, 0, 1, -196515, 0, 1, -196516, 0, 1, -196517, 0, 1, -196518, 0, 1, -196519, 0, 1, -196520, 0, 1, -196521, 0, 1, -196522, 0, 1, -130990, 0, 1, -130991, 0, 1, -130989, 0, 1, -130988, 0, 1, 524378, 0, 1048584, 589917, 0, 1048584, 655444, 0, 1048580, 655446, 0, 1441796, 655445, 0, 1441806, 786517, 0, 655376, 524369, 0, 655371, 524370, 0, 655370, 524371, 0, 10, 524372, 0, 11, 524373, 0, 9, 524374, 0, 655369, 524377, 0, 12, 589916, 0, 12, 655454, 0, 655371, 458846, 0, 1, 458847, 0, 1, 458848, 0, 1, 393312, 0, 1, 393313, 0, 1048590, 393314, 0, 1, -196504, 0, 1, -130968, 0, 1, -65432, 0, 1, 104, 0, 1, 65640, 0, 1, 131176, 0, 1, 196712, 0, 1, 262248, 0, 1, 327784, 0, 1, 393320, 0, 1, 458856, 0, 1, 524392, 0, 1, 524391, 0, 1, 589927, 0, 1441794, 589926, 0, 1441794, 524390, 0, 1, 589928, 0, 1441794, 327785, 0, 1, 262249, 0, 1, 196713, 0, 1, 131177, 0, 1, 65641, 0, 1, 105, 0, 1, -65431, 0, 1, -130967, 0, 1, -196503, 0, 1, -196502, 0, 1, -130966, 0, 1, -65430, 0, 1, 106, 0, 1, 65642, 0, 1, 131178, 0, 1, 196714, 0, 1, 262250, 0, 1, 327786, 0, 1, 327787, 0, 1441794, 262251, 0, 1, 196715, 0, 1, 131179, 0, 1, 65643, 0, 1, 107, 0, 1, -65429, 0, 1, -130965, 0, 1, -196501, 0, 1, 393319, 0, 1, 458855, 0, 1, 393321, 0, 1, 458857, 0, 1, -196500, 0, 1, -130963, 0, 1, -65428, 0, 1, 108, 0, 1, 65644, 0, 1, -130964, 0, 1, -196499, 0, 1, -196498, 0, 1, -130962, 0, 1, -196497, 0, 1, -130961, 0, 1, -65426, 0, 1, -65427, 0, 1, -65425, 0, 1, 111, 0, 1, 110, 0, 1, 109, 0, 1, 65645, 0, 1, 65646, 0, 1, 65647, 0, 1, 131182, 0, 1, 131181, 0, 1, 131180, 0, 1, 131183, 0, 1, 196718, 0, 1, 196717, 0, 1, 196716, 0, 1, 262252, 0, 1, 262253, 0, 1, 262254, 0, 1, 196719, 0, 1, 262255, 0, 1, 327791, 0, 1441794, 327790, 0, 1441794, 327789, 0, 1441794, 327788, 0, 1441794, 327792, 0, 1441794, 262256, 0, 1, 196720, 0, 1, 131184, 0, 1, 65648, 0, 1, 112, 0, 1, -65424, 0, 1, -130960, 0, 1, -196496, 0, 1, -196495, 0, 1, -130959, 0, 1, -65423, 0, 1, 113, 0, 1, 65649, 0, 1, 131185, 0, 1, 196721, 0, 1, 262257, 0, 1, 327793, 0, 1441794, 327794, 0, 1441794, 262258, 0, 1, 196722, 0, 1, 131186, 0, 1, 65650, 0, 1, 114, 0, 1, -196494, 0, 1, -130958, 0, 1, -65422, 0, 1, 393318, 0, 1048594, 262247, 0, 1048594, 589929, 0, 1441811, 458858, 0, 1441811, 327795, 0, 1441809, 196724, 0, 1441809, 65653, 0, 1441809, -65418, 0, 1441809, -196489, 0, 1441809, -196493, 0, 1441793, -196492, 0, 1441793, -196491, 0, 1441793, -196490, 0, 1441793, -130955, 0, 1441793, -130956, 0, 1441793, -130957, 0, 1441793, -65419, 0, 1441793, -65420, 0, 1441793, -65421, 0, 1441793, 115, 0, 1441793, 116, 0, 1441793, 65652, 0, 1441793, 65651, 0, 1441793, 131187, 0, 1441793, 196723, 0, 1441793, 524406, 0, 1048581, 393335, 0, 1048583, 458871, 0, 1048577, 393336, 0, 1048577, 458872, 0, 1048577, 458873, 0, 1048577, 393337, 0, 1048577, 458874, 0, 1048577, 393338, 0, 1048577, 393339, 0, 1048577, 458875, 0, 1048577, 589943, 0, 1048581, 655480, 0, 1048581, 721018, 0, 1048584, 524407, 0, 1048577, 524408, 0, 1048577, 524409, 0, 1048577, 589945, 0, 1048577, 589944, 0, 1048577, 655481, 0, 1048577, 655482, 0, 1048577, 589946, 0, 1048577, 524410, 0, 1048577, 524411, 0, 1048577, 589947, 0, 1048577, 655483, 0, 1048577, 393340, 0, 1048577, 458876, 0, 1048577, 524412, 0, 1048577, 589948, 0, 1048577, 655484, 0, 1048577, 721019, 0, 1048578, 721020, 0, 1048578, 589949, 0, 1048578, 589950, 0, 1048578, 589951, 0, 1048578, 589952, 0, 1048578, 524413, 0, 1048577, 458877, 0, 1048577, 458878, 0, 1048577, 524414, 0, 1048577, 458879, 0, 1048577, 524415, 0, 1048577, 524416, 0, 1048577, 458880, 0, 1048577, 393341, 0, 1048577, 393342, 0, 1048577, 393343, 0, 1048577, 393344, 0, 1048577, 589953, 0, 1441800, 524419, 0, 1441800, 393345, 0, 1441799, 458883, 0, 1441799, 458881, 0, 1441793, 458882, 0, 1441793, 524418, 0, 1441793, 524417, 0, 1441793, 983186, 0, 2, 983187, 0, 2, 1114257, 0, 1441811, 1179792, 0, 1441797, 1179791, 0, 1441794, 1179790, 0, 1048581, 1114254, 0, 1048577, 1114255, 0, 1048577, 1114256, 0, 1048577, 1048720, 0, 1048577, 983185, 0, 1048577, 983184, 0, 1048577, 983183, 0, 1048580, 1048719, 0, 1048577, 1048718, 0, 1048580, 1441943, 0, 1441799, 1507481, 0, 1441793, 1507482, 0, 1441793, 1507483, 0, 1, 1441947, 0, 1, 1376411, 0, 1, 1310875, 0, 1, 1245339, 0, 1, 1179803, 0, 1, 1114267, 0, 1, 1048731, 0, 1, 983195, 0, 1, 917659, 0, 1, 852123, 0, 1, 786587, 0, 1, 721051, 0, 1, 655515, 0, 1, 589979, 0, 1, 524443, 0, 1, 458907, 0, 1, 393371, 0, 1, 327835, 0, 1, 262299, 0, 1, 196763, 0, 1, 131227, 0, 1, 65691, 0, 1, 155, 0, 1, -65381, 0, 1, -130917, 0, 1, -196453, 0, 1, -196452, 0, 1, -196451, 0, 1, -130915, 0, 1, -130916, 0, 1, -65380, 0, 1, -65379, 0, 1, 157, 0, 1, 156, 0, 1, 65693, 0, 1, 65692, 0, 1, 131228, 0, 1, 131229, 0, 1, 196764, 0, 1, 196765, 0, 1, 262301, 0, 1, 262300, 0, 1, 327837, 0, 1, 327836, 0, 1, 393372, 0, 1, 393373, 0, 1, 458909, 0, 1, 458908, 0, 1, 524444, 0, 1, 524445, 0, 1, 589981, 0, 1, 589980, 0, 1, 655517, 0, 1, 655516, 0, 1, 721052, 0, 1, 786588, 0, 1, 852124, 0, 1, 917660, 0, 1, 983196, 0, 1, 1048732, 0, 1, 1114268, 0, 1, 1179804, 0, 1, 1245340, 0, 1, 1507484, 0, 1, 1441948, 0, 1, 1376412, 0, 1, 1376413, 0, 1, 1441949, 0, 1, 1507485, 0, 1, 1310876, 0, 1, 1310877, 0, 1, 1245341, 0, 1, 1179805, 0, 1, 1114269, 0, 1, 1048733, 0, 1, 983197, 0, 1, 917661, 0, 1, 852125, 0, 1, 786589, 0, 1, 786590, 0, 1, 721054, 0, 1, 721053, 0, 1, 655518, 0, 1, 589982, 0, 1, 524446, 0, 1, 458910, 0, 1, 393374, 0, 1, 327838, 0, 1, 262302, 0, 1, 196766, 0, 1, 131230, 0, 1, 65694, 0, 1, 158, 0, 1, -65378, 0, 1, -130914, 0, 1, -196450, 0, 1, 852126, 0, 1, 917662, 0, 1, 983198, 0, 1, 1048734, 0, 1, 1114270, 0, 1, 1179806, 0, 1, 1245342, 0, 1, 1310878, 0, 1, 1376414, 0, 1, 1507486, 0, 1, 1441950, 0, 1, 1573018, 0, 1, 1573019, 0, 1, 1573020, 0, 1, 1573021, 0, 1, 1573022, 0, 1, 1507478, 0, 1048581, 1441941, 0, 1048595, 1573015, 0, 1048581, 1638553, 0, 1048584, 1704091, 0, 1048584, 1638556, 0, 1048577, 1638555, 0, 1048577, 1638554, 0, 1048577, 1573017, 0, 1048577, 1573016, 0, 1048577, 1507480, 0, 1048577, 1507479, 0, 1048577, 1441942, 0, 1048577, 1310869, 0, 1, 1441946, 0, 1048580, 1310870, 0, 1441810, 1704092, 0, 2, 1704093, 0, 2, 1704094, 0, 2, 1507487, 0, 2, 1507488, 0, 2, 1507489, 0, 2, 1507490, 0, 2, 1507491, 0, 2, 1573028, 0, 2, 1573029, 0, 2, 1573030, 0, 2, 1310887, 0, 1, 1310888, 0, 2, 1310889, 0, 2, 1310890, 0, 2, 1376423, 0, 2, 1179819, 0, 2, 1048748, 0, 2, 917677, 0, 2, 917678, 0, 2, 917679, 0, 2, 917680, 0, 2, 917681, 0, 2, 917682, 0, 2, 917683, 0, 2, 917684, 0, 2, 917685, 0, 2, 917686, 0, 2, 917687, 0, 2, 983224, 0, 2, 983225, 0, 2, 1114298, 0, 2, 1114299, 0, 2, 1245372, 0, 2, 1245373, 0, 2, 1310910, 0, 2, 1310911, 0, 2, 1310912, 0, 2, 1310913, 0, 2, 1310914, 0, 2, 1376455, 0, 2, 1376456, 0, 2, 1376457, 0, 2, 1376458, 0, 1, 1573069, 0, 2, 1573070, 0, 1, 1769679, 0, 2, 1769680, 0, 2, 1966289, 0, 1048581, 1966290, 0, 2, 2228435, 0, 2, 2228436, 0, 2, 1966291, 0, 2, 1966292, 0, 2, 1966293, 0, 2, 1966294, 0, 1441793, 2490581, 0, 2, 2490582, 0, 2, 2752728, 0, 2, 2752729, 0, 2, 3014875, 0, 2, 3014876, 0, 2, 3014877, 0, 2, 3014878, 0, 2, 2687193, 0, 1441796, 2425046, 0, 1441796, 2162900, 0, 1441796, 2162899, 0, 1048580, 2425045, 0, 1048580, 2687192, 0, 1048580, 2883803, 0, 1048594, 2752732, 0, 1048594, 2883804, 0, 1, 2949340, 0, 1, 2949341, 0, 1, 2883805, 0, 1, 2818269, 0, 1, 2752733, 0, 1, 2752734, 0, 1, 2818270, 0, 1, 2883806, 0, 1, 2949342, 0, 1, 2752735, 0, 1, 2818271, 0, 1, 2883807, 0, 1, 2949343, 0, 1, 3014879, 0, 1, 3080415, 0, 2, 3080416, 0, 2, 3080417, 0, 2, 3080418, 0, 2, 3080419, 0, 2, 3080420, 0, 2, 3080421, 0, 1441811, 2949350, 0, 1441811, 2818279, 0, 1441797, 2752744, 0, 1441800, 2687210, 0, 1441794, 2687211, 0, 1441794, 2687212, 0, 1441794, 2687213, 0, 1441794, 2752751, 0, 1048584, 2818288, 0, 1048581, 2883826, 0, 1048584, 2883827, 0, 1048578, 2883828, 0, 1048578, 2883829, 0, 1048578, 2818294, 0, 1048578, 2818295, 0, 1048578, 2818296, 0, 1048578, 2818297, 0, 1048578, 2818298, 0, 1441800, 2621694, 0, 1441811, 2752764, 0, 1441797, 2687229, 0, 1441797, 2490623, 0, 1441811, 2294016, 0, 1441811, 2162945, 0, 1441811, 2031874, 0, 1441797, 1966339, 0, 1441797, 1900804, 0, 1441800, 1835270, 0, 1441800, 1769736, 0, 1441794, 1769737, 0, 1441794, 1769738, 0, 1441794, 1769740, 0, 1441794, 1769739, 0, 1441794, 1835278, 0, 1048584, 1900815, 0, 1048581, 1966352, 0, 1048581, 2097425, 0, 1048595, 2162962, 0, 1048581, 2228499, 0, 1048581, 2294037, 0, 1048584, 2294038, 0, 1048578, 2294039, 0, 1048578, 2294040, 0, 1048578, 2294041, 0, 1048578, 2294042, 0, 1048578, 2294043, 0, 1048578, 2294044, 0, 1441800, 2228510, 0, 1441797, 2162975, 0, 1441800, 2097441, 0, 2, 2097442, 0, 2, 2097443, 0, 2, 2097444, 0, 2, 2097445, 0, 2, 2097446, 0, 2, 1835301, 0, 2, 1835302, 0, 2, 1835303, 0, 2, 1835304, 0, 2, 1835305, 0, 2, 1835306, 0, 2, 1507617, 0, 2, 1507618, 0, 2, 1507619, 0, 2, 1507620, 0, 2, 1507621, 0, 2, 1376550, 0, 2, 1245479, 0, 2, 1245480, 0, 2, 1245481, 0, 2, 1245482, 0, 2, 1245483, 0, 2, 1311020, 0, 2, 1311021, 0, 2, 1311022, 0, 2, 1311023, 0, 2, 1311024, 0, 2, 1311025, 0, 2, 1311026, 0, 2, 1311027, 0, 2, 1311028, 0, 1441800, 1245494, 0, 1441797, 1179959, 0, 1441797, 1114424, 0, 1441811, 721209, 0, 1441811, 590138, 0, 1441797, 524603, 0, 1441811, 316, 0, 2, 317, 0, 2, 318, 0, 2, 319, 0, 2, 320, 0, 2, 321, 0, 2, 322, 0, 2, 323, 0, 2, 324, 0, 2, 325, 0, 2, 326, 0, 2, 327, 0, 2, 328, 0, 2, 329, 0, 2, 330, 0, 2, 331, 0, 2, 332, 0, 2, 333, 0, 2, 334, 0, 2, 335, 0, 2, 336, 0, 2, 337, 0, 2, 338, 0, 2, 339, 0, 2, -65220, 0, 1, -65219, 0, 1, -65218, 0, 1, -65217, 0, 1, -65216, 0, 1, -65215, 0, 1, -65214, 0, 1, -65213, 0, 1, -65212, 0, 1, -65211, 0, 1, -65210, 0, 1, -65209, 0, 1, -65208, 0, 1, -65207, 0, 1, -65206, 0, 1, -65205, 0, 1, -65204, 0, 1, -65203, 0, 1, -65202, 0, 1, -65201, 0, 1, -65200, 0, 1, -65199, 0, 1, -65198, 0, 1, -65197, 0, 1, 1638557, 0, 1, 1638558, 0, 1, -196449, 0, 1, -130913, 0, 1, -65377, 0, 1, 159, 0, 1, 65695, 0, 1, 131231, 0, 1, 196767, 0, 1, 262303, 0, 1, 327839, 0, 1, 393375, 0, 1, 458911, 0, 1, 524447, 0, 1, 589983, 0, 1, 655519, 0, 1, 721055, 0, 1, 786591, 0, 1, 852127, 0, 1, 917663, 0, 1, 983199, 0, 1, 1048735, 0, 1, 1114271, 0, 1, 1179807, 0, 1, 1245343, 0, 1, 1310879, 0, 1, 1376415, 0, 1, 1441951, 0, 1, -196448, 0, 1, -130912, 0, 1, -65376, 0, 1, 160, 0, 1, 65696, 0, 1, 131232, 0, 1, 196768, 0, 1, 262304, 0, 1, 327840, 0, 1, 393376, 0, 1, 458912, 0, 1, 524448, 0, 1, 589984, 0, 1, 655520, 0, 1, 721056, 0, 1, 786592, 0, 1, 852128, 0, 1, 917664, 0, 1, 983200, 0, 1, 1048736, 0, 1, 1114272, 0, 1, 1179808, 0, 1, 1245344, 0, 1, 1310880, 0, 1, 1376416, 0, 1, 1441952, 0, 1, -196447, 0, 1, -130911, 0, 1, -65375, 0, 1, 161, 0, 1, 65697, 0, 1, 131233, 0, 1, 196769, 0, 1, 262305, 0, 1, 327841, 0, 1, 393377, 0, 1, 458913, 0, 1, 524449, 0, 1, 589985, 0, 1, 655521, 0, 1, 721057, 0, 1, 786593, 0, 1, 852129, 0, 1, 917665, 0, 1, 983201, 0, 1, 1048737, 0, 1, 1114273, 0, 1, 1179809, 0, 1, 1245345, 0, 1, 1310881, 0, 1, 1376417, 0, 1, 1441953, 0, 1, -196446, 0, 1, -130910, 0, 1, -65374, 0, 1, 162, 0, 1, 65698, 0, 1, 131234, 0, 1, 196770, 0, 1, 262306, 0, 1, 327842, 0, 1, 393378, 0, 1, 458914, 0, 1, 524450, 0, 1, 589986, 0, 1, 655522, 0, 1, 721058, 0, 1, 786594, 0, 1, 852130, 0, 1, 917666, 0, 1, 983202, 0, 1, 1048738, 0, 1, 1114274, 0, 1, 1179810, 0, 1, 1245346, 0, 1, 1310882, 0, 1, 1376418, 0, 1, 1441954, 0, 1, -196445, 0, 1, -130909, 0, 1, -65373, 0, 1, 163, 0, 1, 65699, 0, 1, 131235, 0, 1, 196771, 0, 1, 262307, 0, 1, 327843, 0, 1, 393379, 0, 1, 458915, 0, 1, 524451, 0, 1, 589987, 0, 1, 655523, 0, 1, 721059, 0, 1, 786595, 0, 1, 852131, 0, 1, 917667, 0, 1, 983203, 0, 1, 1048739, 0, 1, 1114275, 0, 1, 1179811, 0, 1, 1245347, 0, 1, 1310883, 0, 1, 1376419, 0, 1, 1441955, 0, 1, -196444, 0, 1, -130908, 0, 1, -65372, 0, 1, 164, 0, 1, 65700, 0, 1, 131236, 0, 1, 196772, 0, 1, 262308, 0, 1, 327844, 0, 1, 393380, 0, 1, 458916, 0, 1, 524452, 0, 1, 589988, 0, 1, 655524, 0, 1, 721060, 0, 1, 786596, 0, 1, 852132, 0, 1, 917668, 0, 1, 983204, 0, 1, 1048740, 0, 1, 1114276, 0, 1, 1179812, 0, 1, 1245348, 0, 1, 1310884, 0, 1, 1376420, 0, 1, 1441956, 0, 1, -196443, 0, 1, -130907, 0, 1, -65371, 0, 1, 165, 0, 1, 65701, 0, 1, 131237, 0, 1, 196773, 0, 1, 262309, 0, 1, 327845, 0, 1, 393381, 0, 1, 458917, 0, 1, 524453, 0, 1, 589989, 0, 1, 655525, 0, 1, 721061, 0, 1, 786597, 0, 1, 852133, 0, 1, 917669, 0, 1, 983205, 0, 1, 1048741, 0, 1, 1114277, 0, 1, 1179813, 0, 1, 1245349, 0, 1, 1310885, 0, 1, 1376421, 0, 1, 1441957, 0, 1, -196442, 0, 1, -130906, 0, 1, -65370, 0, 1, 166, 0, 1, 65702, 0, 1, 131238, 0, 1, 196774, 0, 1, 262310, 0, 1, 327846, 0, 1, 393382, 0, 1, 458918, 0, 1, 524454, 0, 1, 589990, 0, 1, 655526, 0, 1, 721062, 0, 1, 786598, 0, 1, 852134, 0, 1, 917670, 0, 1, 983206, 0, 1, 1048742, 0, 1, 1114278, 0, 1, 1179814, 0, 1, 1245350, 0, 1, 1310886, 0, 1, 1376422, 0, 1, 1441958, 0, 1, -196441, 0, 1, -130905, 0, 1, -65369, 0, 1, 167, 0, 1, 65703, 0, 1, 131239, 0, 1, 196775, 0, 1, 262311, 0, 1, 327847, 0, 1, 393383, 0, 1, 458919, 0, 1, 524455, 0, 1, 589991, 0, 1, 655527, 0, 1, 721063, 0, 1, 786599, 0, 1, 852135, 0, 1, 917671, 0, 1, 983207, 0, 1, 1048743, 0, 1, 1114279, 0, 1, 1179815, 0, 1, 1245351, 0, 1, -196440, 0, 1, -130904, 0, 1, -65368, 0, 1, 168, 0, 1, 65704, 0, 1, 131240, 0, 1, 196776, 0, 1, 262312, 0, 1, 327848, 0, 1, 393384, 0, 1, 458920, 0, 1, 524456, 0, 1, 589992, 0, 1, 655528, 0, 1, 721064, 0, 1, 786600, 0, 1, 852136, 0, 1, 917672, 0, 1, 983208, 0, 1, 1048744, 0, 1, 1114280, 0, 1, 1179816, 0, 1, 1245352, 0, 1, -196439, 0, 1, -130903, 0, 1, -65367, 0, 1, 169, 0, 1, 65705, 0, 1, 131241, 0, 1, 196777, 0, 1, 262313, 0, 1, 327849, 0, 1, 393385, 0, 1, 458921, 0, 1, 524457, 0, 1, 589993, 0, 1, 655529, 0, 1, 721065, 0, 1, 786601, 0, 1, 852137, 0, 1, 917673, 0, 1, 983209, 0, 1, 1048745, 0, 1, 1114281, 0, 1, 1179817, 0, 1, 1245353, 0, 1, -196438, 0, 1, -130902, 0, 1, -65366, 0, 1, 170, 0, 1, 65706, 0, 1, 131242, 0, 1, 196778, 0, 1, 262314, 0, 1, 327850, 0, 1, 393386, 0, 1, 458922, 0, 1, 524458, 0, 1, 589994, 0, 1, 655530, 0, 1, 721066, 0, 1, 786602, 0, 1, 852138, 0, 1, 917674, 0, 1, 983210, 0, 1, 1048746, 0, 1, 1114282, 0, 1, 1179818, 0, 1, 1245354, 0, 1, -196437, 0, 1, -130901, 0, 1, -65365, 0, 1, 171, 0, 1, 65707, 0, 1, 131243, 0, 1, 196779, 0, 1, 262315, 0, 1, 327851, 0, 1, 393387, 0, 1, 458923, 0, 1, 524459, 0, 1, 589995, 0, 1, 655531, 0, 1, 721067, 0, 1, 786603, 0, 1, 852139, 0, 1, 917675, 0, 1, 983211, 0, 1, 1048747, 0, 1, 1114283, 0, 1, 917676, 0, 1, 983212, 0, 1, -196436, 0, 1, -130900, 0, 1, -65364, 0, 1, 172, 0, 1, 65708, 0, 1, 131244, 0, 1, 196780, 0, 1, 262316, 0, 1, 327852, 0, 1, 393388, 0, 1, 458924, 0, 1, 524460, 0, 1, 589996, 0, 1, 655532, 0, 1, 721068, 0, 1, 786604, 0, 1, 852140, 0, 1, -196435, 0, 1, -130899, 0, 1, -65363, 0, 1, 173, 0, 1, 65709, 0, 1, 131245, 0, 1, 196781, 0, 1, 262317, 0, 1, 327853, 0, 1, 393389, 0, 1, 458925, 0, 1, 524461, 0, 1, 589997, 0, 1, 655533, 0, 1, 721069, 0, 1, 786605, 0, 1, 852141, 0, 1, -196434, 0, 1, -130898, 0, 1, -65362, 0, 1, 174, 0, 1, 65710, 0, 1, 131246, 0, 1, 196782, 0, 1, 262318, 0, 1, 327854, 0, 1, 393390, 0, 1, 458926, 0, 1, 524462, 0, 1, 589998, 0, 1, 655534, 0, 1, 721070, 0, 1, 786606, 0, 1, 852142, 0, 1, -196433, 0, 1, -130897, 0, 1, -65361, 0, 1, 175, 0, 1, 65711, 0, 1, 131247, 0, 1, 196783, 0, 1, 262319, 0, 1, 327855, 0, 1, 393391, 0, 1, 458927, 0, 1, 524463, 0, 1, 589999, 0, 1, 655535, 0, 1, 721071, 0, 1, 786607, 0, 1, 852143, 0, 1, -196432, 0, 1, -130896, 0, 1, -65360, 0, 1, 176, 0, 1, 65712, 0, 1, 131248, 0, 1, 196784, 0, 1, 262320, 0, 1, 327856, 0, 1, 393392, 0, 1, 458928, 0, 1, 524464, 0, 1, 590000, 0, 1, 655536, 0, 1, 721072, 0, 1, 786608, 0, 1, 852144, 0, 1, -196431, 0, 1, -130895, 0, 1, -65359, 0, 1, 177, 0, 1, 65713, 0, 1, 131249, 0, 1, 196785, 0, 1, 262321, 0, 1, 327857, 0, 1, 393393, 0, 1, 458929, 0, 1, 524465, 0, 1, 590001, 0, 1, 655537, 0, 1, 721073, 0, 1, 786609, 0, 1, 852145, 0, 1, -196430, 0, 1, -130894, 0, 1, -65358, 0, 1, 178, 0, 1, 65714, 0, 1, 131250, 0, 1, 196786, 0, 1, 262322, 0, 1, 327858, 0, 1, 393394, 0, 1, 458930, 0, 1, 524466, 0, 1, 590002, 0, 1, 655538, 0, 1, 721074, 0, 1, 786610, 0, 1, 852146, 0, 1, -196429, 0, 1, -130893, 0, 1, -65357, 0, 1, 179, 0, 1, 65715, 0, 1, 131251, 0, 1, 196787, 0, 1, 262323, 0, 1, 327859, 0, 1, 393395, 0, 1, 458931, 0, 1, 524467, 0, 1, 590003, 0, 1, 655539, 0, 1, 721075, 0, 1, 786611, 0, 1, 852147, 0, 1, -196428, 0, 1, -130892, 0, 1, -65356, 0, 1, 180, 0, 1, 65716, 0, 1, 131252, 0, 1, 196788, 0, 1, 262324, 0, 1, 327860, 0, 1, 393396, 0, 1, 458932, 0, 1, 524468, 0, 1, 590004, 0, 1, 655540, 0, 1, 721076, 0, 1, 786612, 0, 1, 852148, 0, 1, -196427, 0, 1, -130891, 0, 1, -65355, 0, 1, 181, 0, 1, 65717, 0, 1, 131253, 0, 1, 196789, 0, 1, 262325, 0, 1, 327861, 0, 1, 393397, 0, 1, 458933, 0, 1, 524469, 0, 1, 590005, 0, 1, 655541, 0, 1, 721077, 0, 1, 786613, 0, 1, 852149, 0, 1, -196426, 0, 1, -130890, 0, 1, -65354, 0, 1, 182, 0, 1, 65718, 0, 1, 131254, 0, 1, 196790, 0, 1, 262326, 0, 1, 327862, 0, 1, 393398, 0, 1, 458934, 0, 1, 524470, 0, 1, 590006, 0, 1, 655542, 0, 1, 721078, 0, 1, 786614, 0, 1, 852150, 0, 1, -196425, 0, 1, -130889, 0, 1, -65353, 0, 1, 183, 0, 1, 65719, 0, 1, 131255, 0, 1, 196791, 0, 1, 262327, 0, 1, 327863, 0, 1, 393399, 0, 1, 458935, 0, 1, 524471, 0, 1, 590007, 0, 1, 655543, 0, 1, 721079, 0, 1, 786615, 0, 1, 852151, 0, 1, -196424, 0, 1, -130888, 0, 1, -65352, 0, 1, 184, 0, 1, 65720, 0, 1, 131256, 0, 1, 196792, 0, 1, 262328, 0, 1, 327864, 0, 1, 393400, 0, 1, 458936, 0, 1, 524472, 0, 1, 590008, 0, 1, 655544, 0, 1, 721080, 0, 1, 786616, 0, 1, 852152, 0, 1, -196423, 0, 1, -130887, 0, 1, -65351, 0, 1, 185, 0, 1, 65721, 0, 1, 131257, 0, 1, 196793, 0, 1, 262329, 0, 1, 327865, 0, 1, 393401, 0, 1, 458937, 0, 1, 524473, 0, 1, 590009, 0, 1, 655545, 0, 1, 721081, 0, 1, 786617, 0, 1, 852153, 0, 1, -196422, 0, 1, -130886, 0, 1, -65350, 0, 1, 186, 0, 1, 65722, 0, 1, 131258, 0, 1, 196794, 0, 1, 262330, 0, 1, 327866, 0, 1, 393402, 0, 1, 458938, 0, 1, 524474, 0, 1, 590010, 0, 1, 655546, 0, 1, 721082, 0, 1, 786618, 0, 1, 852154, 0, 1, -196421, 0, 1, -130885, 0, 1, -65349, 0, 1, 187, 0, 1, 65723, 0, 1, 131259, 0, 1, 196795, 0, 1, 262331, 0, 1, 327867, 0, 1, 393403, 0, 1, 458939, 0, 1, 524475, 0, 1, 590011, 0, 1, 655547, 0, 1, 721083, 0, 1, 786619, 0, 1, 852155, 0, 1, -196420, 0, 1, -130884, 0, 1, -65348, 0, 1, 188, 0, 1, 65724, 0, 1, 131260, 0, 1, 196796, 0, 1, 262332, 0, 1, 327868, 0, 1, 393404, 0, 1, 458940, 0, 1, 524476, 0, 1, 590012, 0, 1, 655548, 0, 1, 721084, 0, 1, 786620, 0, 1, 852156, 0, 1, -196419, 0, 1, -130883, 0, 1, -65347, 0, 1, 189, 0, 1, 65725, 0, 1, 131261, 0, 1, 196797, 0, 1, 262333, 0, 1, 327869, 0, 1, 393405, 0, 1, 458941, 0, 1, 524477, 0, 1, 590013, 0, 1, 655549, 0, 1, 721085, 0, 1, 786621, 0, 1, 852157, 0, 1, -196418, 0, 1, -130882, 0, 1, -65346, 0, 1, 190, 0, 1, 65726, 0, 1, 131262, 0, 1, 196798, 0, 1, 262334, 0, 1, 327870, 0, 1, 393406, 0, 1, 458942, 0, 1, 524478, 0, 1, 590014, 0, 1, 655550, 0, 1, 721086, 0, 1, 786622, 0, 1, 852158, 0, 1, -196417, 0, 1, -130881, 0, 1, -65345, 0, 1, 191, 0, 1, 65727, 0, 1, 131263, 0, 1, 196799, 0, 1, 262335, 0, 1, 327871, 0, 1, 393407, 0, 1, 458943, 0, 1, 524479, 0, 1, 590015, 0, 1, 655551, 0, 1, 721087, 0, 1, 786623, 0, 1, 852159, 0, 1, -196416, 0, 1, -130880, 0, 1, -65344, 0, 1, 192, 0, 1, 65728, 0, 1, 131264, 0, 1, 196800, 0, 1, 262336, 0, 1, 327872, 0, 1, 393408, 0, 1, 458944, 0, 1, 524480, 0, 1, 590016, 0, 1, 655552, 0, 1, 721088, 0, 1, 786624, 0, 1, 852160, 0, 1, -196415, 0, 1, -130879, 0, 1, -65343, 0, 1, 193, 0, 1, 65729, 0, 1, 131265, 0, 1, 196801, 0, 1, 262337, 0, 1, 327873, 0, 1, 393409, 0, 1, 458945, 0, 1, 524481, 0, 1, 590017, 0, 1, 655553, 0, 1, 721089, 0, 1, 786625, 0, 1, 852161, 0, 1, -196414, 0, 1, -130878, 0, 1, -65342, 0, 1, 194, 0, 1, 65730, 0, 1, 131266, 0, 1, 196802, 0, 1, 262338, 0, 1, 327874, 0, 1, 393410, 0, 1, 458946, 0, 1, 524482, 0, 1, 590018, 0, 1, 655554, 0, 1, 721090, 0, 1, 786626, 0, 1, 852162, 0, 1, 917692, 0, 1, 983228, 0, 1, 1048764, 0, 1, 1114300, 0, 1, 1179836, 0, 1, 917693, 0, 1, 983229, 0, 1, 1048765, 0, 1, 1114301, 0, 1, 1179837, 0, 1, 917694, 0, 1, 983230, 0, 1, 1048766, 0, 1, 1114302, 0, 1, 1179838, 0, 1, 917695, 0, 1, 983231, 0, 1, 1048767, 0, 1, 1114303, 0, 1, 1179839, 0, 1, 917696, 0, 1, 983232, 0, 1, 1048768, 0, 1, 1114304, 0, 1, 1179840, 0, 1, 917697, 0, 1, 983233, 0, 1, 1048769, 0, 1, 1114305, 0, 1, 1179841, 0, 1, 917698, 0, 1, 983234, 0, 1, 1048770, 0, 1, 1114306, 0, 1, 1179842, 0, 1, 1245374, 0, 1, 1245375, 0, 1, 1245376, 0, 1, 1245377, 0, 1, 1245378, 0, 1, 917690, 0, 1, 983226, 0, 1, 1048762, 0, 1, 917691, 0, 1, 983227, 0, 1, 1048763, 0, 1, 917688, 0, 1, 917689, 0, 1, 1507492, 0, 1, 1507493, 0, 1, 1507494, 0, 1, -196385, 0, 1, -130849, 0, 1, -65313, 0, 1, 223, 0, 1, 65759, 0, 1, 131295, 0, 1, 196831, 0, 1, 262367, 0, 1, 327903, 0, 1, 393439, 0, 1, 458975, 0, 1, 524511, 0, 1, 590047, 0, 1, 655583, 0, 1, 721119, 0, 1, 786655, 0, 1, 852191, 0, 1, 917727, 0, 1, 983263, 0, 1, 1048799, 0, 1, 1114335, 0, 1, 1179871, 0, 1, 1245407, 0, 1, 1310943, 0, 1, 1376479, 0, 1, 1442015, 0, 1, 1507551, 0, 1, 1573087, 0, 1, 1638623, 0, 1, 1704159, 0, 1, 1769695, 0, 1, 1835231, 0, 1, 1900767, 0, 1, 1966303, 0, 1, 2031839, 0, 1, 2097375, 0, 1, 2162911, 0, 1, 2228447, 0, 1, 2293983, 0, 1, 2359519, 0, 1, 2425055, 0, 1, 2490591, 0, 1, 2556127, 0, 1, 2621663, 0, 1, 2687199, 0, 1, -196384, 0, 1, -130848, 0, 1, -65312, 0, 1, 224, 0, 1, 65760, 0, 1, 131296, 0, 1, 196832, 0, 1, 262368, 0, 1, 327904, 0, 1, 393440, 0, 1, 458976, 0, 1, 524512, 0, 1, 590048, 0, 1, 655584, 0, 1, 721120, 0, 1, 786656, 0, 1, 852192, 0, 1, 917728, 0, 1, 983264, 0, 1, 1048800, 0, 1, 1114336, 0, 1, 1179872, 0, 1, 1245408, 0, 1, 1310944, 0, 1, 1376480, 0, 1, 1442016, 0, 1, 1507552, 0, 1, 1573088, 0, 1, 1638624, 0, 1, 1704160, 0, 1, 1769696, 0, 1, 1835232, 0, 1, 1900768, 0, 1, 1966304, 0, 1, 2031840, 0, 1, 2097376, 0, 1, 2162912, 0, 1, 2228448, 0, 1, 2293984, 0, 1, 2359520, 0, 1, 2425056, 0, 1, 2490592, 0, 1, 2556128, 0, 1, 2621664, 0, 1, 2687200, 0, 1, 2752736, 0, 1, 2818272, 0, 1, 2883808, 0, 1, 2949344, 0, 1, 3014880, 0, 1, -196383, 0, 1, -130847, 0, 1, -65311, 0, 1, 225, 0, 1, 65761, 0, 1, 131297, 0, 1, 196833, 0, 1, 262369, 0, 1, 327905, 0, 1, 393441, 0, 1, 458977, 0, 1, 524513, 0, 1, 590049, 0, 1, 655585, 0, 1, 721121, 0, 1, 786657, 0, 1, 852193, 0, 1, 917729, 0, 1, 983265, 0, 1, 1048801, 0, 1, 1114337, 0, 1, 1179873, 0, 1, 1245409, 0, 1, 1310945, 0, 1, 1376481, 0, 1, 1442017, 0, 1, 1507553, 0, 1, 1573089, 0, 1, 1638625, 0, 1, 1704161, 0, 1, 1769697, 0, 1, 1835233, 0, 1, 1900769, 0, 1, 1966305, 0, 1, 2031841, 0, 1, 2097377, 0, 1, 2162913, 0, 1, 2228449, 0, 1, 2293985, 0, 1, 2359521, 0, 1, 2425057, 0, 1, 2490593, 0, 1, 2556129, 0, 1, 2621665, 0, 1, 2687201, 0, 1, 2752737, 0, 1, 2818273, 0, 1, 2883809, 0, 1, 2949345, 0, 1, 3014881, 0, 1, -196382, 0, 1, -130846, 0, 1, -65310, 0, 1, 226, 0, 1, 65762, 0, 1, 131298, 0, 1, 196834, 0, 1, 262370, 0, 1, 327906, 0, 1, 393442, 0, 1, 458978, 0, 1, 524514, 0, 1, 590050, 0, 1, 655586, 0, 1, 721122, 0, 1, 786658, 0, 1, 852194, 0, 1, 917730, 0, 1, 983266, 0, 1, 1048802, 0, 1, 1114338, 0, 1, 1179874, 0, 1, 1245410, 0, 1, 1310946, 0, 1, 1376482, 0, 1, 1442018, 0, 1, 1507554, 0, 1, 1573090, 0, 1, 1638626, 0, 1, 1704162, 0, 1, 1769698, 0, 1, 1835234, 0, 1, 1900770, 0, 1, 1966306, 0, 1, 2031842, 0, 1, 2097378, 0, 1, 2162914, 0, 1, 2228450, 0, 1, 2293986, 0, 1, 2359522, 0, 1, 2425058, 0, 1, 2490594, 0, 1, 2556130, 0, 1, 2621666, 0, 1, 2687202, 0, 1, 2752738, 0, 1, 2818274, 0, 1, 2883810, 0, 1, 2949346, 0, 1, 3014882, 0, 1, -196381, 0, 1, -130845, 0, 1, -65309, 0, 1, 227, 0, 1, 65763, 0, 1, 131299, 0, 1, 196835, 0, 1, 262371, 0, 1, 327907, 0, 1, 393443, 0, 1, 458979, 0, 1, 524515, 0, 1, 590051, 0, 1, 655587, 0, 1, 721123, 0, 1, 786659, 0, 1, 852195, 0, 1, 917731, 0, 1, 983267, 0, 1, 1048803, 0, 1, 1114339, 0, 1, 1179875, 0, 1, 1245411, 0, 1, 1310947, 0, 1, 1376483, 0, 1, 1442019, 0, 1, 1507555, 0, 1, 1573091, 0, 1, 1638627, 0, 1, 1704163, 0, 1, 1769699, 0, 1, 1835235, 0, 1, 1900771, 0, 1, 1966307, 0, 1, 2031843, 0, 1, 2097379, 0, 1, 2162915, 0, 1, 2228451, 0, 1, 2293987, 0, 1, 2359523, 0, 1, 2425059, 0, 1, 2490595, 0, 1, 2556131, 0, 1, 2621667, 0, 1, 2687203, 0, 1, 2752739, 0, 1, 2818275, 0, 1, 2883811, 0, 1, 2949347, 0, 1, 3014883, 0, 1, -196380, 0, 1, -130844, 0, 1, -65308, 0, 1, 228, 0, 1, 65764, 0, 1, 131300, 0, 1, 196836, 0, 1, 262372, 0, 1, 327908, 0, 1, 393444, 0, 1, 458980, 0, 1, 524516, 0, 1, 590052, 0, 1, 655588, 0, 1, 721124, 0, 1, 786660, 0, 1, 852196, 0, 1, 917732, 0, 1, 983268, 0, 1, 1048804, 0, 1, 1114340, 0, 1, 1179876, 0, 1, 1245412, 0, 1, 1310948, 0, 1, 1376484, 0, 1, 1442020, 0, 1, 1507556, 0, 1, 1573092, 0, 1, 1638628, 0, 1, 1704164, 0, 1, 1769700, 0, 1, 1835236, 0, 1, 1900772, 0, 1, 1966308, 0, 1, 2031844, 0, 1, 2097380, 0, 1, 2162916, 0, 1, 2228452, 0, 1, 2293988, 0, 1, 2359524, 0, 1, 2425060, 0, 1, 2490596, 0, 1, 2556132, 0, 1, 2621668, 0, 1, 2687204, 0, 1, 2752740, 0, 1, 2818276, 0, 1, 2883812, 0, 1, 2949348, 0, 1, 3014884, 0, 1, -196379, 0, 1, -130843, 0, 1, -65307, 0, 1, 229, 0, 1, 65765, 0, 1, 131301, 0, 1, 196837, 0, 1, 262373, 0, 1, 327909, 0, 1, 393445, 0, 1, 458981, 0, 1, 524517, 0, 1, 590053, 0, 1, 655589, 0, 1, 721125, 0, 1, 786661, 0, 1, 852197, 0, 1, 917733, 0, 1, 983269, 0, 1, 1048805, 0, 1, 1114341, 0, 1, 1179877, 0, 1, 1245413, 0, 1, 1310949, 0, 1, 1376485, 0, 1, 1442021, 0, 1, 1507557, 0, 1, 1573093, 0, 1, 1638629, 0, 1, 1704165, 0, 1, 1769701, 0, 1, 1835237, 0, 1, 1900773, 0, 1, 1966309, 0, 1, 2031845, 0, 1, 2097381, 0, 1, 2162917, 0, 1, 2228453, 0, 1, 2293989, 0, 1, 2359525, 0, 1, 2425061, 0, 1, 2490597, 0, 1, 2556133, 0, 1, 2621669, 0, 1, -196378, 0, 1, -130842, 0, 1, -65306, 0, 1, 230, 0, 1, 65766, 0, 1, 131302, 0, 1, 196838, 0, 1, 262374, 0, 1, 327910, 0, 1, 393446, 0, 1, 458982, 0, 1, 524518, 0, 1, 590054, 0, 1, 655590, 0, 1, 721126, 0, 1, 786662, 0, 1, 852198, 0, 1, 917734, 0, 1, 983270, 0, 1, 1048806, 0, 1, 1114342, 0, 1, 1179878, 0, 1, 1245414, 0, 1, 1310950, 0, 1, 1376486, 0, 1, 1442022, 0, 1, 1507558, 0, 1, 1573094, 0, 1, 1638630, 0, 1, 1704166, 0, 1, 1769702, 0, 1, 1835238, 0, 1, 1900774, 0, 1, 1966310, 0, 1, 2031846, 0, 1, 2097382, 0, 1, 2162918, 0, 1, 2228454, 0, 1, 2293990, 0, 1, 2359526, 0, 1, 2425062, 0, 1, 2490598, 0, 1, 2556134, 0, 1, 2621670, 0, 1, -196377, 0, 1, -130841, 0, 1, -65305, 0, 1, 231, 0, 1, 65767, 0, 1, 131303, 0, 1, 196839, 0, 1, 262375, 0, 1, 327911, 0, 1, 393447, 0, 1, 458983, 0, 1, 524519, 0, 1, 590055, 0, 1, 655591, 0, 1, 721127, 0, 1, 786663, 0, 1, 852199, 0, 1, 917735, 0, 1, 983271, 0, 1, 1048807, 0, 1, 1114343, 0, 1, 1179879, 0, 1, 1245415, 0, 1, 1310951, 0, 1, 1376487, 0, 1, 1442023, 0, 1, 1507559, 0, 1, 1573095, 0, 1, 1638631, 0, 1, 1704167, 0, 1, 1769703, 0, 1, 1835239, 0, 1, 1900775, 0, 1, 1966311, 0, 1, 2031847, 0, 1, 2097383, 0, 1, 2162919, 0, 1, 2228455, 0, 1, 2293991, 0, 1, 2359527, 0, 1, 2425063, 0, 1, 2490599, 0, 1, 2556135, 0, 1, 2621671, 0, 1, -196376, 0, 1, -130840, 0, 1, -65304, 0, 1, 232, 0, 1, 65768, 0, 1, 131304, 0, 1, 196840, 0, 1, 262376, 0, 1, 327912, 0, 1, 393448, 0, 1, 458984, 0, 1, 524520, 0, 1, 590056, 0, 1, 655592, 0, 1, 721128, 0, 1, 786664, 0, 1, 852200, 0, 1, 917736, 0, 1, 983272, 0, 1, 1048808, 0, 1, 1114344, 0, 1, 1179880, 0, 1, 1245416, 0, 1, 1310952, 0, 1, 1376488, 0, 1, 1442024, 0, 1, 1507560, 0, 1, 1573096, 0, 1, 1638632, 0, 1, 1704168, 0, 1, 1769704, 0, 1, 1835240, 0, 1, 1900776, 0, 1, 1966312, 0, 1, 2031848, 0, 1, 2097384, 0, 1, 2162920, 0, 1, 2228456, 0, 1, 2293992, 0, 1, 2359528, 0, 1, 2425064, 0, 1, 2490600, 0, 1, 2556136, 0, 1, 2621672, 0, 1, -196375, 0, 1, -130839, 0, 1, -65303, 0, 1, 233, 0, 1, 65769, 0, 1, 131305, 0, 1, 196841, 0, 1, 262377, 0, 1, 327913, 0, 1, 393449, 0, 1, 458985, 0, 1, 524521, 0, 1, 590057, 0, 1, 655593, 0, 1, 721129, 0, 1, 786665, 0, 1, 852201, 0, 1, 917737, 0, 1, 983273, 0, 1, 1048809, 0, 1, 1114345, 0, 1, 1179881, 0, 1, 1245417, 0, 1, 1310953, 0, 1, 1376489, 0, 1, 1442025, 0, 1, 1507561, 0, 1, 1573097, 0, 1, 1638633, 0, 1, 1704169, 0, 1, 1769705, 0, 1, 1835241, 0, 1, 1900777, 0, 1, 1966313, 0, 1, 2031849, 0, 1, 2097385, 0, 1, 2162921, 0, 1, 2228457, 0, 1, 2293993, 0, 1, 2359529, 0, 1, 2425065, 0, 1, 2490601, 0, 1, 2556137, 0, 1, 2621673, 0, 1, -196374, 0, 1, -130838, 0, 1, -65302, 0, 1, 234, 0, 1, 65770, 0, 1, 131306, 0, 1, 196842, 0, 1, 262378, 0, 1, 327914, 0, 1, 393450, 0, 1, 458986, 0, 1, 524522, 0, 1, 590058, 0, 1, 655594, 0, 1, 721130, 0, 1, 786666, 0, 1, 852202, 0, 1, 917738, 0, 1, 983274, 0, 1, 1048810, 0, 1, 1114346, 0, 1, 1179882, 0, 1, 1245418, 0, 1, 1310954, 0, 1, 1376490, 0, 1, 1442026, 0, 1, 1507562, 0, 1, 1573098, 0, 1, 1638634, 0, 1, 1704170, 0, 1, 1769706, 0, 1, 1835242, 0, 1, 1900778, 0, 1, 1966314, 0, 1, 2031850, 0, 1, 2097386, 0, 1, 2162922, 0, 1, 2228458, 0, 1, 2293994, 0, 1, 2359530, 0, 1, 2425066, 0, 1, 2490602, 0, 1, 2556138, 0, 1, 2621674, 0, 1, -196373, 0, 1, -130837, 0, 1, -65301, 0, 1, 235, 0, 1, 65771, 0, 1, 131307, 0, 1, 196843, 0, 1, 262379, 0, 1, 327915, 0, 1, 393451, 0, 1, 458987, 0, 1, 524523, 0, 1, 590059, 0, 1, 655595, 0, 1, 721131, 0, 1, 786667, 0, 1, 852203, 0, 1, 917739, 0, 1, 983275, 0, 1, 1048811, 0, 1, 1114347, 0, 1, 1179883, 0, 1, 1245419, 0, 1, 1310955, 0, 1, 1376491, 0, 1, 1442027, 0, 1, 1507563, 0, 1, 1573099, 0, 1, 1638635, 0, 1, 1704171, 0, 1, 1769707, 0, 1, 1835243, 0, 1, 1900779, 0, 1, 1966315, 0, 1, 2031851, 0, 1, 2097387, 0, 1, 2162923, 0, 1, 2228459, 0, 1, 2293995, 0, 1, 2359531, 0, 1, 2425067, 0, 1, 2490603, 0, 1, 2556139, 0, 1, 2621675, 0, 1, -196372, 0, 1, -130836, 0, 1, -65300, 0, 1, 236, 0, 1, 65772, 0, 1, 131308, 0, 1, 196844, 0, 1, 262380, 0, 1, 327916, 0, 1, 393452, 0, 1, 458988, 0, 1, 524524, 0, 1, 590060, 0, 1, 655596, 0, 1, 721132, 0, 1, 786668, 0, 1, 852204, 0, 1, 917740, 0, 1, 983276, 0, 1, 1048812, 0, 1, 1114348, 0, 1, 1179884, 0, 1, 1245420, 0, 1, 1310956, 0, 1, 1376492, 0, 1, 1442028, 0, 1, 1507564, 0, 1, 1573100, 0, 1, 1638636, 0, 1, 1704172, 0, 1, 1769708, 0, 1, 1835244, 0, 1, 1900780, 0, 1, 1966316, 0, 1, 2031852, 0, 1, 2097388, 0, 1, 2162924, 0, 1, 2228460, 0, 1, 2293996, 0, 1, 2359532, 0, 1, 2425068, 0, 1, 2490604, 0, 1, 2556140, 0, 1, 2621676, 0, 1, -196371, 0, 1, -130835, 0, 1, -65299, 0, 1, 237, 0, 1, 65773, 0, 1, 131309, 0, 1, 196845, 0, 1, 262381, 0, 1, 327917, 0, 1, 393453, 0, 1, 458989, 0, 1, 524525, 0, 1, 590061, 0, 1, 655597, 0, 1, 721133, 0, 1, 786669, 0, 1, 852205, 0, 1, 917741, 0, 1, 983277, 0, 1, 1048813, 0, 1, 1114349, 0, 1, 1179885, 0, 1, 1245421, 0, 1, 1310957, 0, 1, 1376493, 0, 1, 1442029, 0, 1, 1507565, 0, 1, 1573101, 0, 1, 1638637, 0, 1, 1704173, 0, 1, 1769709, 0, 1, 1835245, 0, 1, 1900781, 0, 1, 1966317, 0, 1, 2031853, 0, 1, 2097389, 0, 1, 2162925, 0, 1, 2228461, 0, 1, 2293997, 0, 1, 2359533, 0, 1, 2425069, 0, 1, 2490605, 0, 1, 2556141, 0, 1, 2621677, 0, 1, -196370, 0, 1, -130834, 0, 1, -65298, 0, 1, 238, 0, 1, 65774, 0, 1, 131310, 0, 1, 196846, 0, 1, 262382, 0, 1, 327918, 0, 1, 393454, 0, 1, 458990, 0, 1, 524526, 0, 1, 590062, 0, 1, 655598, 0, 1, 721134, 0, 1, 786670, 0, 1, 852206, 0, 1, 917742, 0, 1, 983278, 0, 1, 1048814, 0, 1, 1114350, 0, 1, 1179886, 0, 1, 1245422, 0, 1, 1310958, 0, 1, 1376494, 0, 1, 1442030, 0, 1, 1507566, 0, 1, 1573102, 0, 1, 1638638, 0, 1, 1704174, 0, 1, 1769710, 0, 1, 1835246, 0, 1, 1900782, 0, 1, 1966318, 0, 1, 2031854, 0, 1, 2097390, 0, 1, 2162926, 0, 1, 2228462, 0, 1, 2293998, 0, 1, 2359534, 0, 1, 2425070, 0, 1, 2490606, 0, 1, 2556142, 0, 1, 2621678, 0, 1, -196369, 0, 1, -130833, 0, 1, -65297, 0, 1, 239, 0, 1, 65775, 0, 1, 131311, 0, 1, 196847, 0, 1, 262383, 0, 1, 327919, 0, 1, 393455, 0, 1, 458991, 0, 1, 524527, 0, 1, 590063, 0, 1, 655599, 0, 1, 721135, 0, 1, 786671, 0, 1, 852207, 0, 1, 917743, 0, 1, 983279, 0, 1, 1048815, 0, 1, 1114351, 0, 1, 1179887, 0, 1, 1245423, 0, 1, 1310959, 0, 1, 1376495, 0, 1, 1442031, 0, 1, 1507567, 0, 1, 1573103, 0, 1, 1638639, 0, 1, 1704175, 0, 1, 1769711, 0, 1, 1835247, 0, 1, 1900783, 0, 1, 1966319, 0, 1, 2031855, 0, 1, 2097391, 0, 1, 2162927, 0, 1, 2228463, 0, 1, 2293999, 0, 1, 2359535, 0, 1, 2425071, 0, 1, 2490607, 0, 1, 2556143, 0, 1, 2621679, 0, 1, -196368, 0, 1, -130832, 0, 1, -65296, 0, 1, 240, 0, 1, 65776, 0, 1, 131312, 0, 1, 196848, 0, 1, 262384, 0, 1, 327920, 0, 1, 393456, 0, 1, 458992, 0, 1, 524528, 0, 1, 590064, 0, 1, 655600, 0, 1, 721136, 0, 1, 786672, 0, 1, 852208, 0, 1, 917744, 0, 1, 983280, 0, 1, 1048816, 0, 1, 1114352, 0, 1, 1179888, 0, 1, 1245424, 0, 1, 1310960, 0, 1, 1376496, 0, 1, 1442032, 0, 1, 1507568, 0, 1, 1573104, 0, 1, 1638640, 0, 1, 1704176, 0, 1, 1769712, 0, 1, 1835248, 0, 1, 1900784, 0, 1, 1966320, 0, 1, 2031856, 0, 1, 2097392, 0, 1, 2162928, 0, 1, 2228464, 0, 1, 2294000, 0, 1, 2359536, 0, 1, 2425072, 0, 1, 2490608, 0, 1, 2556144, 0, 1, 2621680, 0, 1, -196367, 0, 1, -130831, 0, 1, -65295, 0, 1, 241, 0, 1, 65777, 0, 1, 131313, 0, 1, 196849, 0, 1, 262385, 0, 1, 327921, 0, 1, 393457, 0, 1, 458993, 0, 1, 524529, 0, 1, 590065, 0, 1, 655601, 0, 1, 721137, 0, 1, 786673, 0, 1, 852209, 0, 1, 917745, 0, 1, 983281, 0, 1, 1048817, 0, 1, 1114353, 0, 1, 1179889, 0, 1, 1245425, 0, 1, 1310961, 0, 1, 1376497, 0, 1, 1442033, 0, 1, 1507569, 0, 1, 1573105, 0, 1, 1638641, 0, 1, 1704177, 0, 1, 1769713, 0, 1, 1835249, 0, 1, 1900785, 0, 1, 1966321, 0, 1, 2031857, 0, 1, 2097393, 0, 1, 2162929, 0, 1, 2228465, 0, 1, 2294001, 0, 1, 2359537, 0, 1, 2425073, 0, 1, 2490609, 0, 1, 2556145, 0, 1, 2621681, 0, 1, -196366, 0, 1, -130830, 0, 1, -65294, 0, 1, 242, 0, 1, 65778, 0, 1, 131314, 0, 1, 196850, 0, 1, 262386, 0, 1, 327922, 0, 1, 393458, 0, 1, 458994, 0, 1, 524530, 0, 1, 590066, 0, 1, 655602, 0, 1, 721138, 0, 1, 786674, 0, 1, 852210, 0, 1, 917746, 0, 1, 983282, 0, 1, 1048818, 0, 1, 1114354, 0, 1, 1179890, 0, 1, 1245426, 0, 1, 1310962, 0, 1, 1376498, 0, 1, 1442034, 0, 1, 1507570, 0, 1, 1573106, 0, 1, 1638642, 0, 1, 1704178, 0, 1, 1769714, 0, 1, 1835250, 0, 1, 1900786, 0, 1, 1966322, 0, 1, 2031858, 0, 1, 2097394, 0, 1, 2162930, 0, 1, 2228466, 0, 1, 2294002, 0, 1, 2359538, 0, 1, 2425074, 0, 1, 2490610, 0, 1, 2556146, 0, 1, 2621682, 0, 1, -196365, 0, 1, -130829, 0, 1, -65293, 0, 1, 243, 0, 1, 65779, 0, 1, 131315, 0, 1, 196851, 0, 1, 262387, 0, 1, 327923, 0, 1, 393459, 0, 1, 458995, 0, 1, 524531, 0, 1, 590067, 0, 1, 655603, 0, 1, 721139, 0, 1, 786675, 0, 1, 852211, 0, 1, 917747, 0, 1, 983283, 0, 1, 1048819, 0, 1, 1114355, 0, 1, 1179891, 0, 1, 1245427, 0, 1, 1310963, 0, 1, 1376499, 0, 1, 1442035, 0, 1, 1507571, 0, 1, 1573107, 0, 1, 1638643, 0, 1, 1704179, 0, 1, 1769715, 0, 1, 1835251, 0, 1, 1900787, 0, 1, 1966323, 0, 1, 2031859, 0, 1, 2097395, 0, 1, 2162931, 0, 1, 2228467, 0, 1, 2294003, 0, 1, 2359539, 0, 1, 2425075, 0, 1, 2490611, 0, 1, 2556147, 0, 1, 2621683, 0, 1, -196320, 0, 1, -130784, 0, 1, -65248, 0, 1, 288, 0, 1, 65824, 0, 1, 131360, 0, 1, 196896, 0, 1, 262432, 0, 1, 327968, 0, 1, 393504, 0, 1, 459040, 0, 1, 524576, 0, 1, 590112, 0, 1, 655648, 0, 1, 721184, 0, 1, 786720, 0, 1, 852256, 0, 1, 917792, 0, 1, 983328, 0, 1, -196319, 0, 1, -130783, 0, 1, -65247, 0, 1, 289, 0, 1, 65825, 0, 1, 131361, 0, 1, 196897, 0, 1, 262433, 0, 1, 327969, 0, 1, 393505, 0, 1, 459041, 0, 1, 524577, 0, 1, 590113, 0, 1, 655649, 0, 1, 721185, 0, 1, 786721, 0, 1, 852257, 0, 1, 917793, 0, 1, 983329, 0, 1, -196318, 0, 1, -130782, 0, 1, -65246, 0, 1, 290, 0, 1, 65826, 0, 1, 131362, 0, 1, 196898, 0, 1, 262434, 0, 1, 327970, 0, 1, 393506, 0, 1, 459042, 0, 1, 524578, 0, 1, 590114, 0, 1, 655650, 0, 1, 721186, 0, 1, 786722, 0, 1, 852258, 0, 1, 917794, 0, 1, 983330, 0, 1, -196317, 0, 1, -130781, 0, 1, -65245, 0, 1, 291, 0, 1, 65827, 0, 1, 131363, 0, 1, 196899, 0, 1, 262435, 0, 1, 327971, 0, 1, 393507, 0, 1, 459043, 0, 1, 524579, 0, 1, 590115, 0, 1, 655651, 0, 1, 721187, 0, 1, 786723, 0, 1, 852259, 0, 1, 917795, 0, 1, 983331, 0, 1, -196316, 0, 1, -130780, 0, 1, -65244, 0, 1, 292, 0, 1, 65828, 0, 1, 131364, 0, 1, 196900, 0, 1, 262436, 0, 1, 327972, 0, 1, 393508, 0, 1, 459044, 0, 1, 524580, 0, 1, 590116, 0, 1, 655652, 0, 1, 721188, 0, 1, 786724, 0, 1, 852260, 0, 1, 917796, 0, 1, 983332, 0, 1, -196315, 0, 1, -130779, 0, 1, -65243, 0, 1, 293, 0, 1, 65829, 0, 1, 131365, 0, 1, 196901, 0, 1, 262437, 0, 1, 327973, 0, 1, 393509, 0, 1, 459045, 0, 1, 524581, 0, 1, 590117, 0, 1, 655653, 0, 1, 721189, 0, 1, 786725, 0, 1, 852261, 0, 1, 917797, 0, 1, 983333, 0, 1, -196314, 0, 1, -130778, 0, 1, -65242, 0, 1, 294, 0, 1, 65830, 0, 1, 131366, 0, 1, 196902, 0, 1, 262438, 0, 1, 327974, 0, 1, 393510, 0, 1, 459046, 0, 1, 524582, 0, 1, 590118, 0, 1, 655654, 0, 1, 721190, 0, 1, 786726, 0, 1, 852262, 0, 1, 917798, 0, 1, 983334, 0, 1, -196313, 0, 1, -130777, 0, 1, -65241, 0, 1, 295, 0, 1, 65831, 0, 1, 131367, 0, 1, 196903, 0, 1, 262439, 0, 1, 327975, 0, 1, 393511, 0, 1, 459047, 0, 1, 524583, 0, 1, 590119, 0, 1, 655655, 0, 1, 721191, 0, 1, 786727, 0, 1, 852263, 0, 1, 917799, 0, 1, 983335, 0, 1, -196312, 0, 1, -130776, 0, 1, -65240, 0, 1, 296, 0, 1, 65832, 0, 1, 131368, 0, 1, 196904, 0, 1, 262440, 0, 1, 327976, 0, 1, 393512, 0, 1, 459048, 0, 1, 524584, 0, 1, 590120, 0, 1, 655656, 0, 1, 721192, 0, 1, 786728, 0, 1, 852264, 0, 1, 917800, 0, 1, 983336, 0, 1, -196311, 0, 1, -130775, 0, 1, -65239, 0, 1, 297, 0, 1, 65833, 0, 1, 131369, 0, 1, 196905, 0, 1, 262441, 0, 1, 327977, 0, 1, 393513, 0, 1, 459049, 0, 1, 524585, 0, 1, 590121, 0, 1, 655657, 0, 1, 721193, 0, 1, 786729, 0, 1, 852265, 0, 1, 917801, 0, 1, 983337, 0, 1, -196310, 0, 1, -130774, 0, 1, -65238, 0, 1, 298, 0, 1, 65834, 0, 1, 131370, 0, 1, 196906, 0, 1, 262442, 0, 1, 327978, 0, 1, 393514, 0, 1, 459050, 0, 1, 524586, 0, 1, 590122, 0, 1, 655658, 0, 1, 721194, 0, 1, 786730, 0, 1, 852266, 0, 1, 917802, 0, 1, 983338, 0, 1, -196309, 0, 1, -130773, 0, 1, -65237, 0, 1, 299, 0, 1, 65835, 0, 1, 131371, 0, 1, 196907, 0, 1, 262443, 0, 1, 327979, 0, 1, 393515, 0, 1, 459051, 0, 1, 524587, 0, 1, 590123, 0, 1, 655659, 0, 1, 721195, 0, 1, 786731, 0, 1, 852267, 0, 1, 917803, 0, 1, 983339, 0, 1, -196308, 0, 1, -130772, 0, 1, -65236, 0, 1, 300, 0, 1, 65836, 0, 1, 131372, 0, 1, 196908, 0, 1, 262444, 0, 1, 327980, 0, 1, 393516, 0, 1, 459052, 0, 1, 524588, 0, 1, 590124, 0, 1, 655660, 0, 1, 721196, 0, 1, 786732, 0, 1, 852268, 0, 1, 917804, 0, 1, 983340, 0, 1, -196307, 0, 1, -130771, 0, 1, -65235, 0, 1, 301, 0, 1, 65837, 0, 1, 131373, 0, 1, 196909, 0, 1, 262445, 0, 1, 327981, 0, 1, 393517, 0, 1, 459053, 0, 1, 524589, 0, 1, 590125, 0, 1, 655661, 0, 1, 721197, 0, 1, 786733, 0, 1, 852269, 0, 1, 917805, 0, 1, 983341, 0, 1, -196306, 0, 1, -130770, 0, 1, -65234, 0, 1, 302, 0, 1, 65838, 0, 1, 131374, 0, 1, 196910, 0, 1, 262446, 0, 1, 327982, 0, 1, 393518, 0, 1, 459054, 0, 1, 524590, 0, 1, 590126, 0, 1, 655662, 0, 1, 721198, 0, 1, 786734, 0, 1, 852270, 0, 1, 917806, 0, 1, 983342, 0, 1, -196305, 0, 1, -130769, 0, 1, -65233, 0, 1, 303, 0, 1, 65839, 0, 1, 131375, 0, 1, 196911, 0, 1, 262447, 0, 1, 327983, 0, 1, 393519, 0, 1, 459055, 0, 1, 524591, 0, 1, 590127, 0, 1, 655663, 0, 1, 721199, 0, 1, 786735, 0, 1, 852271, 0, 1, 917807, 0, 1, 983343, 0, 1, -196304, 0, 1, -130768, 0, 1, -65232, 0, 1, 304, 0, 1, 65840, 0, 1, 131376, 0, 1, 196912, 0, 1, 262448, 0, 1, 327984, 0, 1, 393520, 0, 1, 459056, 0, 1, 524592, 0, 1, 590128, 0, 1, 655664, 0, 1, 721200, 0, 1, 786736, 0, 1, 852272, 0, 1, 917808, 0, 1, 983344, 0, 1, -196303, 0, 1, -130767, 0, 1, -65231, 0, 1, 305, 0, 1, 65841, 0, 1, 131377, 0, 1, 196913, 0, 1, 262449, 0, 1, 327985, 0, 1, 393521, 0, 1, 459057, 0, 1, 524593, 0, 1, 590129, 0, 1, 655665, 0, 1, 721201, 0, 1, 786737, 0, 1, 852273, 0, 1, 917809, 0, 1, 983345, 0, 1, -196302, 0, 1, -130766, 0, 1, -65230, 0, 1, 306, 0, 1, 65842, 0, 1, 131378, 0, 1, 196914, 0, 1, 262450, 0, 1, 327986, 0, 1, 393522, 0, 1, 459058, 0, 1, 524594, 0, 1, 590130, 0, 1, 655666, 0, 1, 721202, 0, 1, 786738, 0, 1, 852274, 0, 1, 917810, 0, 1, 983346, 0, 1, -196301, 0, 1, -130765, 0, 1, -65229, 0, 1, 307, 0, 1, 65843, 0, 1, 131379, 0, 1, 196915, 0, 1, 262451, 0, 1, 327987, 0, 1, 393523, 0, 1, 459059, 0, 1, 524595, 0, 1, 590131, 0, 1, 655667, 0, 1, 721203, 0, 1, 786739, 0, 1, 852275, 0, 1, 917811, 0, 1, 983347, 0, 1, -196300, 0, 1, -130764, 0, 1, -65228, 0, 1, 308, 0, 1, 65844, 0, 1, 131380, 0, 1, 196916, 0, 1, 262452, 0, 1, 327988, 0, 1, 393524, 0, 1, 459060, 0, 1, 524596, 0, 1, 590132, 0, 1, 655668, 0, 1, 721204, 0, 1, 786740, 0, 1, 852276, 0, 1, 917812, 0, 1, 983348, 0, 1, -196299, 0, 1, -130763, 0, 1, -65227, 0, 1, 309, 0, 1, 65845, 0, 1, 131381, 0, 1, 196917, 0, 1, 262453, 0, 1, 327989, 0, 1, 393525, 0, 1, 459061, 0, 1, 524597, 0, 1, 590133, 0, 1, 655669, 0, 1, 721205, 0, 1, 786741, 0, 1, 852277, 0, 1, 917813, 0, 1, 983349, 0, 1, -196298, 0, 1, -130762, 0, 1, -65226, 0, 1, 310, 0, 1, 65846, 0, 1, 131382, 0, 1, 196918, 0, 1, 262454, 0, 1, 327990, 0, 1, 393526, 0, 1, 459062, 0, 1, 524598, 0, 1, 590134, 0, 1, 655670, 0, 1, 721206, 0, 1, 786742, 0, 1, 852278, 0, 1, 917814, 0, 1, 983350, 0, 1, -196297, 0, 1, -130761, 0, 1, -65225, 0, 1, 311, 0, 1, 65847, 0, 1, 131383, 0, 1, 196919, 0, 1, 262455, 0, 1, 327991, 0, 1, 393527, 0, 1, 459063, 0, 1, 524599, 0, 1, 590135, 0, 1, 655671, 0, 1, 721207, 0, 1, 786743, 0, 1, 852279, 0, 1, 917815, 0, 1, 983351, 0, 1, -196296, 0, 1, -130760, 0, 1, -65224, 0, 1, 312, 0, 1, 65848, 0, 1, 131384, 0, 1, 196920, 0, 1, 262456, 0, 1, 327992, 0, 1, 393528, 0, 1, 459064, 0, 1, 524600, 0, 1, 590136, 0, 1, 655672, 0, 1, 721208, 0, 1, 786744, 0, 1, 852280, 0, 1, 917816, 0, 1, 983352, 0, 1, 1048864, 0, 1, 1114400, 0, 1, 1179936, 0, 1, 1048865, 0, 1, 1114401, 0, 1, 1179937, 0, 1, 1048866, 0, 1, 1114402, 0, 1, 1179938, 0, 1, 1048867, 0, 1, 1114403, 0, 1, 1179939, 0, 1, 1048868, 0, 1, 1114404, 0, 1, 1179940, 0, 1, 1048869, 0, 1, 1114405, 0, 1, 1179941, 0, 1, 1048870, 0, 1, 1114406, 0, 1, 1179942, 0, 1, 1048871, 0, 1, 1114407, 0, 1, 1179943, 0, 1, 1048872, 0, 1, 1114408, 0, 1, 1179944, 0, 1, 1048873, 0, 1, 1114409, 0, 1, 1179945, 0, 1, 1048874, 0, 1, 1114410, 0, 1, 1179946, 0, 1, 1048875, 0, 1, 1114411, 0, 1, 1179947, 0, 1, 1048876, 0, 1, 1114412, 0, 1, 1179948, 0, 1, 1048877, 0, 1, 1114413, 0, 1, 1179949, 0, 1, 1048878, 0, 1, 1114414, 0, 1, 1179950, 0, 1, 1048879, 0, 1, 1114415, 0, 1, 1179951, 0, 1, 1048880, 0, 1, 1114416, 0, 1, 1179952, 0, 1, 1048881, 0, 1, 1114417, 0, 1, 1179953, 0, 1, 1048882, 0, 1, 1114418, 0, 1, 1179954, 0, 1, 1048883, 0, 1, 1114419, 0, 1, 1179955, 0, 1, 1048884, 0, 1, 1114420, 0, 1, 1179956, 0, 1, 1048885, 0, 1, 1114421, 0, 1, 1179957, 0, 1, 1048886, 0, 1, 1114422, 0, 1, 1179958, 0, 1, 1245472, 0, 1, 1311008, 0, 1, 1376544, 0, 1, 1442080, 0, 1, 1245473, 0, 1, 1311009, 0, 1, 1376545, 0, 1, 1442081, 0, 1, 1245474, 0, 1, 1311010, 0, 1, 1376546, 0, 1, 1442082, 0, 1, 1245475, 0, 1, 1311011, 0, 1, 1376547, 0, 1, 1442083, 0, 1, 1245476, 0, 1, 1311012, 0, 1, 1376548, 0, 1, 1442084, 0, 1, 1245477, 0, 1, 1311013, 0, 1, 1376549, 0, 1, 1442085, 0, 1, 983284, 0, 1, 1048820, 0, 1, 1114356, 0, 1, 1179892, 0, 1, 1245428, 0, 1, 1310964, 0, 1, 1376500, 0, 1, 1442036, 0, 1, 1507572, 0, 1, 1573108, 0, 1, 1638644, 0, 1, 1704180, 0, 1, 983285, 0, 1, 1048821, 0, 1, 1114357, 0, 1, 1179893, 0, 1, 1245429, 0, 1, 1310965, 0, 1, 1376501, 0, 1, 1442037, 0, 1, 1507573, 0, 1, 1573109, 0, 1, 1638645, 0, 1, 1704181, 0, 1, 983286, 0, 1, 1048822, 0, 1, 1114358, 0, 1, 1179894, 0, 1, 1245430, 0, 1, 1310966, 0, 1, 1376502, 0, 1, 1442038, 0, 1, 1507574, 0, 1, 1573110, 0, 1, 1638646, 0, 1, 1704182, 0, 1, 983287, 0, 1, 1048823, 0, 1, 1114359, 0, 1, 1179895, 0, 1, 1245431, 0, 1, 1310967, 0, 1, 1376503, 0, 1, 1442039, 0, 1, 1507575, 0, 1, 1573111, 0, 1, 1638647, 0, 1, 1704183, 0, 1, 983288, 0, 1, 1048824, 0, 1, 1114360, 0, 1, 1179896, 0, 1, 1245432, 0, 1, 1310968, 0, 1, 1376504, 0, 1, 1442040, 0, 1, 1507576, 0, 1, 1573112, 0, 1, 1638648, 0, 1, 1704184, 0, 1, 983289, 0, 1, 1048825, 0, 1, 1114361, 0, 1, 1179897, 0, 1, 1245433, 0, 1, 1310969, 0, 1, 1376505, 0, 1, 1442041, 0, 1, 1507577, 0, 1, 1573113, 0, 1, 1638649, 0, 1, 1704185, 0, 1, 983290, 0, 1, 1048826, 0, 1, 1114362, 0, 1, 1179898, 0, 1, 1245434, 0, 1, 1310970, 0, 1, 1376506, 0, 1, 1442042, 0, 1, 1507578, 0, 1, 1573114, 0, 1, 1638650, 0, 1, 1704186, 0, 1, 983291, 0, 1, 1048827, 0, 1, 1114363, 0, 1, 1179899, 0, 1, 1245435, 0, 1, 1310971, 0, 1, 1376507, 0, 1, 1442043, 0, 1, 1507579, 0, 1, 1573115, 0, 1, 1638651, 0, 1, 1704187, 0, 1, 983292, 0, 1, 1048828, 0, 1, 1114364, 0, 1, 1179900, 0, 1, 1245436, 0, 1, 1310972, 0, 1, 1376508, 0, 1, 1442044, 0, 1, 1507580, 0, 1, 1573116, 0, 1, 1638652, 0, 1, 1704188, 0, 1, 983293, 0, 1, 1048829, 0, 1, 1114365, 0, 1, 1179901, 0, 1, 1245437, 0, 1, 1310973, 0, 1, 1376509, 0, 1, 1442045, 0, 1, 1507581, 0, 1, 1573117, 0, 1, 1638653, 0, 1, 1704189, 0, 1, 983294, 0, 1, 1048830, 0, 1, 1114366, 0, 1, 1179902, 0, 1, 1245438, 0, 1, 1310974, 0, 1, 1376510, 0, 1, 1442046, 0, 1, 1507582, 0, 1, 1573118, 0, 1, 1638654, 0, 1, 1704190, 0, 1, 983295, 0, 1, 1048831, 0, 1, 1114367, 0, 1, 1179903, 0, 1, 1245439, 0, 1, 1310975, 0, 1, 1376511, 0, 1, 1442047, 0, 1, 1507583, 0, 1, 1573119, 0, 1, 1638655, 0, 1, 1704191, 0, 1, 983296, 0, 1, 1048832, 0, 1, 1114368, 0, 1, 1179904, 0, 1, 1245440, 0, 1, 1310976, 0, 1, 1376512, 0, 1, 1442048, 0, 1, 1507584, 0, 1, 1573120, 0, 1, 1638656, 0, 1, 1704192, 0, 1, 983297, 0, 1, 1048833, 0, 1, 1114369, 0, 1, 1179905, 0, 1, 1245441, 0, 1, 1310977, 0, 1, 1376513, 0, 1, 1442049, 0, 1, 1507585, 0, 1, 1573121, 0, 1, 1638657, 0, 1, 1704193, 0, 1, 983298, 0, 1, 1048834, 0, 1, 1114370, 0, 1, 1179906, 0, 1, 1245442, 0, 1, 1310978, 0, 1, 1376514, 0, 1, 1442050, 0, 1, 1507586, 0, 1, 1573122, 0, 1, 1638658, 0, 1, 1704194, 0, 1, 983299, 0, 1, 1048835, 0, 1, 1114371, 0, 1, 1179907, 0, 1, 1245443, 0, 1, 1310979, 0, 1, 1376515, 0, 1, 1442051, 0, 1, 1507587, 0, 1, 1573123, 0, 1, 1638659, 0, 1, 1704195, 0, 1, 983300, 0, 1, 1048836, 0, 1, 1114372, 0, 1, 1179908, 0, 1, 1245444, 0, 1, 1310980, 0, 1, 1376516, 0, 1, 1442052, 0, 1, 1507588, 0, 1, 1573124, 0, 1, 1638660, 0, 1, 1704196, 0, 1, 983301, 0, 1, 1048837, 0, 1, 1114373, 0, 1, 1179909, 0, 1, 1245445, 0, 1, 1310981, 0, 1, 1376517, 0, 1, 1442053, 0, 1, 1507589, 0, 1, 1573125, 0, 1, 1638661, 0, 1, 1704197, 0, 1, 983302, 0, 1, 1048838, 0, 1, 1114374, 0, 1, 1179910, 0, 1, 1245446, 0, 1, 1310982, 0, 1, 1376518, 0, 1, 1442054, 0, 1, 1507590, 0, 1, 1573126, 0, 1, 1638662, 0, 1, 1704198, 0, 1, 983303, 0, 1, 1048839, 0, 1, 1114375, 0, 1, 1179911, 0, 1, 1245447, 0, 1, 1310983, 0, 1, 1376519, 0, 1, 1442055, 0, 1, 1507591, 0, 1, 1573127, 0, 1, 1638663, 0, 1, 1704199, 0, 1, 983304, 0, 1, 1048840, 0, 1, 1114376, 0, 1, 1179912, 0, 1, 1245448, 0, 1, 1310984, 0, 1, 1376520, 0, 1, 1442056, 0, 1, 1507592, 0, 1, 1573128, 0, 1, 1638664, 0, 1, 1704200, 0, 1, 983305, 0, 1, 1048841, 0, 1, 1114377, 0, 1, 1179913, 0, 1, 1245449, 0, 1, 1310985, 0, 1, 1376521, 0, 1, 1442057, 0, 1, 1507593, 0, 1, 1573129, 0, 1, 1638665, 0, 1, 1704201, 0, 1, 983306, 0, 1, 1048842, 0, 1, 1114378, 0, 1, 1179914, 0, 1, 1245450, 0, 1, 1310986, 0, 1, 1376522, 0, 1, 1442058, 0, 1, 1507594, 0, 1, 1573130, 0, 1, 1638666, 0, 1, 1704202, 0, 1, 983307, 0, 1, 1048843, 0, 1, 1114379, 0, 1, 1179915, 0, 1, 1245451, 0, 1, 1310987, 0, 1, 1376523, 0, 1, 1442059, 0, 1, 1507595, 0, 1, 1573131, 0, 1, 1638667, 0, 1, 1704203, 0, 1, 983308, 0, 1, 1048844, 0, 1, 1114380, 0, 1, 1179916, 0, 1, 1245452, 0, 1, 1310988, 0, 1, 1376524, 0, 1, 1442060, 0, 1, 1507596, 0, 1, 1573132, 0, 1, 1638668, 0, 1, 1704204, 0, 1, 983309, 0, 1, 1048845, 0, 1, 1114381, 0, 1, 1179917, 0, 1, 1245453, 0, 1, 1310989, 0, 1, 1376525, 0, 1, 1442061, 0, 1, 1507597, 0, 1, 1573133, 0, 1, 1638669, 0, 1, 1704205, 0, 1, 983310, 0, 1, 1048846, 0, 1, 1114382, 0, 1, 1179918, 0, 1, 1245454, 0, 1, 1310990, 0, 1, 1376526, 0, 1, 1442062, 0, 1, 1507598, 0, 1, 1573134, 0, 1, 1638670, 0, 1, 1704206, 0, 1, 983311, 0, 1, 1048847, 0, 1, 1114383, 0, 1, 1179919, 0, 1, 1245455, 0, 1, 1310991, 0, 1, 1376527, 0, 1, 1442063, 0, 1, 1507599, 0, 1, 1573135, 0, 1, 1638671, 0, 1, 1704207, 0, 1, 983312, 0, 1, 1048848, 0, 1, 1114384, 0, 1, 1179920, 0, 1, 1245456, 0, 1, 1310992, 0, 1, 1376528, 0, 1, 1442064, 0, 1, 1507600, 0, 1, 1573136, 0, 1, 1638672, 0, 1, 1704208, 0, 1, 983313, 0, 1, 1048849, 0, 1, 1114385, 0, 1, 1179921, 0, 1, 1245457, 0, 1, 1310993, 0, 1, 1376529, 0, 1, 1442065, 0, 1, 1507601, 0, 1, 1573137, 0, 1, 1638673, 0, 1, 1704209, 0, 1, 983314, 0, 1, 1048850, 0, 1, 1114386, 0, 1, 1179922, 0, 1, 1245458, 0, 1, 1310994, 0, 1, 1376530, 0, 1, 1442066, 0, 1, 1507602, 0, 1, 1573138, 0, 1, 1638674, 0, 1, 1704210, 0, 1, 983315, 0, 1, 1048851, 0, 1, 1114387, 0, 1, 1179923, 0, 1, 1245459, 0, 1, 1310995, 0, 1, 1376531, 0, 1, 1442067, 0, 1, 1507603, 0, 1, 1573139, 0, 1, 1638675, 0, 1, 1704211, 0, 1, 983316, 0, 1, 1048852, 0, 1, 1114388, 0, 1, 1179924, 0, 1, 1245460, 0, 1, 1310996, 0, 1, 1376532, 0, 1, 1442068, 0, 1, 1507604, 0, 1, 1573140, 0, 1, 1638676, 0, 1, 1704212, 0, 1, 983317, 0, 1, 1048853, 0, 1, 1114389, 0, 1, 1179925, 0, 1, 1245461, 0, 1, 1310997, 0, 1, 1376533, 0, 1, 1442069, 0, 1, 1507605, 0, 1, 1573141, 0, 1, 1638677, 0, 1, 1704213, 0, 1, 983318, 0, 1, 1048854, 0, 1, 1114390, 0, 1, 1179926, 0, 1, 1245462, 0, 1, 1310998, 0, 1, 1376534, 0, 1, 1442070, 0, 1, 1507606, 0, 1, 1573142, 0, 1, 1638678, 0, 1, 1704214, 0, 1, 983319, 0, 1, 1048855, 0, 1, 1114391, 0, 1, 1179927, 0, 1, 1245463, 0, 1, 1310999, 0, 1, 1376535, 0, 1, 1442071, 0, 1, 1507607, 0, 1, 1573143, 0, 1, 1638679, 0, 1, 1704215, 0, 1, 983320, 0, 1, 1048856, 0, 1, 1114392, 0, 1, 1179928, 0, 1, 1245464, 0, 1, 1311000, 0, 1, 1376536, 0, 1, 1442072, 0, 1, 1507608, 0, 1, 1573144, 0, 1, 1638680, 0, 1, 1704216, 0, 1, 983321, 0, 1, 1048857, 0, 1, 1114393, 0, 1, 1179929, 0, 1, 1245465, 0, 1, 1311001, 0, 1, 1376537, 0, 1, 1442073, 0, 1, 1507609, 0, 1, 1573145, 0, 1, 1638681, 0, 1, 1704217, 0, 1, 983322, 0, 1, 1048858, 0, 1, 1114394, 0, 1, 1179930, 0, 1, 1245466, 0, 1, 1311002, 0, 1, 1376538, 0, 1, 1442074, 0, 1, 1507610, 0, 1, 1573146, 0, 1, 1638682, 0, 1, 1704218, 0, 1, 983323, 0, 1, 1048859, 0, 1, 1114395, 0, 1, 1179931, 0, 1, 1245467, 0, 1, 1311003, 0, 1, 1376539, 0, 1, 1442075, 0, 1, 1507611, 0, 1, 1573147, 0, 1, 1638683, 0, 1, 1704219, 0, 1, 983324, 0, 1, 1048860, 0, 1, 1114396, 0, 1, 1179932, 0, 1, 1245468, 0, 1, 1311004, 0, 1, 1376540, 0, 1, 1442076, 0, 1, 1507612, 0, 1, 1573148, 0, 1, 1638684, 0, 1, 1704220, 0, 1, 983325, 0, 1, 1048861, 0, 1, 1114397, 0, 1, 1179933, 0, 1, 1245469, 0, 1, 1311005, 0, 1, 1376541, 0, 1, 1442077, 0, 1, 1507613, 0, 1, 1573149, 0, 1, 1638685, 0, 1, 1704221, 0, 1, 983326, 0, 1, 1048862, 0, 1, 1114398, 0, 1, 1179934, 0, 1, 1245470, 0, 1, 1311006, 0, 1, 1376542, 0, 1, 1442078, 0, 1, 1507614, 0, 1, 1573150, 0, 1, 1638686, 0, 1, 1704222, 0, 1, 983327, 0, 1, 1048863, 0, 1, 1114399, 0, 1, 1179935, 0, 1, 1245471, 0, 1, 1311007, 0, 1, 1376543, 0, 1, 1442079, 0, 1, 1507615, 0, 1, 1573151, 0, 1, 1638687, 0, 1, 1704223, 0, 1, 1769716, 0, 1, 1835252, 0, 1, 1900788, 0, 1, 1966324, 0, 1, 2031860, 0, 1, 2097396, 0, 1, 2162932, 0, 1, 2228468, 0, 1, 2294004, 0, 1, 2359540, 0, 1, 2425076, 0, 1, 2490612, 0, 1, 2556148, 0, 1, 2621684, 0, 1, 1769717, 0, 1, 1835253, 0, 1, 1900789, 0, 1, 1966325, 0, 1, 2031861, 0, 1, 2097397, 0, 1, 2162933, 0, 1, 2228469, 0, 1, 2294005, 0, 1, 2359541, 0, 1, 2425077, 0, 1, 2490613, 0, 1, 2556149, 0, 1, 2621685, 0, 1, 1769718, 0, 1, 1835254, 0, 1, 1900790, 0, 1, 1966326, 0, 1, 2031862, 0, 1, 2097398, 0, 1, 2162934, 0, 1, 2228470, 0, 1, 2294006, 0, 1, 2359542, 0, 1, 2425078, 0, 1, 2490614, 0, 1, 2556150, 0, 1, 2621686, 0, 1, 1769719, 0, 1, 1835255, 0, 1, 1900791, 0, 1, 1966327, 0, 1, 2031863, 0, 1, 2097399, 0, 1, 2162935, 0, 1, 2228471, 0, 1, 2294007, 0, 1, 2359543, 0, 1, 2425079, 0, 1, 2490615, 0, 1, 2556151, 0, 1, 2621687, 0, 1, 1769720, 0, 1, 1835256, 0, 1, 1900792, 0, 1, 1966328, 0, 1, 2031864, 0, 1, 2097400, 0, 1, 2162936, 0, 1, 2228472, 0, 1, 2294008, 0, 1, 2359544, 0, 1, 2425080, 0, 1, 2490616, 0, 1, 2556152, 0, 1, 2621688, 0, 1, 1769721, 0, 1, 1835257, 0, 1, 1900793, 0, 1, 1966329, 0, 1, 2031865, 0, 1, 2097401, 0, 1, 2162937, 0, 1, 2228473, 0, 1, 2294009, 0, 1, 2359545, 0, 1, 2425081, 0, 1, 2490617, 0, 1, 2556153, 0, 1, 2621689, 0, 1, 1769722, 0, 1, 1835258, 0, 1, 1900794, 0, 1, 1966330, 0, 1, 2031866, 0, 1, 2097402, 0, 1, 2162938, 0, 1, 2228474, 0, 1, 2294010, 0, 1, 2359546, 0, 1, 2425082, 0, 1, 2490618, 0, 1, 2556154, 0, 1, 2621690, 0, 1, 1769723, 0, 1, 1835259, 0, 1, 1900795, 0, 1, 1966331, 0, 1, 2031867, 0, 1, 2097403, 0, 1, 2162939, 0, 1, 2228475, 0, 1, 2294011, 0, 1, 2359547, 0, 1, 2425083, 0, 1, 2490619, 0, 1, 2556155, 0, 1, 2621691, 0, 1, 1769724, 0, 1, 1835260, 0, 1, 1900796, 0, 1, 1966332, 0, 1, 2031868, 0, 1, 2097404, 0, 1, 2162940, 0, 1, 2228476, 0, 1, 2294012, 0, 1, 2359548, 0, 1, 2425084, 0, 1, 2490620, 0, 1, 2556156, 0, 1, 2621692, 0, 1, 1769725, 0, 1, 1835261, 0, 1, 1900797, 0, 1, 1966333, 0, 1, 2031869, 0, 1, 2097405, 0, 1, 2162941, 0, 1, 2228477, 0, 1, 2294013, 0, 1, 2359549, 0, 1, 2425085, 0, 1, 2490621, 0, 1, 2556157, 0, 1, 2621693, 0, 1, 1769746, 0, 1, 1835282, 0, 1, 1900818, 0, 1, 1966354, 0, 1, 2031890, 0, 1, 2097426, 0, 1, 1769747, 0, 1, 1835283, 0, 1, 1900819, 0, 1, 1966355, 0, 1, 2031891, 0, 1, 2097427, 0, 1, 1769748, 0, 1, 1835284, 0, 1, 1900820, 0, 1, 1966356, 0, 1, 2031892, 0, 1, 2097428, 0, 1, 1769749, 0, 1, 1835285, 0, 1, 1900821, 0, 1, 1966357, 0, 1, 2031893, 0, 1, 2097429, 0, 1, 1769750, 0, 1, 1835286, 0, 1, 1900822, 0, 1, 1966358, 0, 1, 2031894, 0, 1, 2097430, 0, 1, 1769751, 0, 1, 1835287, 0, 1, 1900823, 0, 1, 1966359, 0, 1, 2031895, 0, 1, 2097431, 0, 1, 1769752, 0, 1, 1835288, 0, 1, 1900824, 0, 1, 1966360, 0, 1, 2031896, 0, 1, 2097432, 0, 1, 1769753, 0, 1, 1835289, 0, 1, 1900825, 0, 1, 1966361, 0, 1, 2031897, 0, 1, 2097433, 0, 1, 1769754, 0, 1, 1835290, 0, 1, 1900826, 0, 1, 1966362, 0, 1, 2031898, 0, 1, 2097434, 0, 1, 1769755, 0, 1, 1835291, 0, 1, 1900827, 0, 1, 1966363, 0, 1, 2031899, 0, 1, 2097435, 0, 1, 1769756, 0, 1, 1835292, 0, 1, 1900828, 0, 1, 1966364, 0, 1, 2031900, 0, 1, 2097436, 0, 1, 1769757, 0, 1, 1835293, 0, 1, 1900829, 0, 1, 1966365, 0, 1, 2031901, 0, 1, 2097437, 0, 1, 1769758, 0, 1, 1835294, 0, 1, 1900830, 0, 1, 1966366, 0, 1, 2031902, 0, 1, 2097438, 0, 1, 1769759, 0, 1, 1835295, 0, 1, 1900831, 0, 1, 1966367, 0, 1, 2031903, 0, 1, 2097439, 0, 1, 2097440, 0, 1, 2162964, 0, 1, 2228500, 0, 1, 2162965, 0, 1, 2228501, 0, 1, 2162966, 0, 1, 2228502, 0, 1, 2162967, 0, 1, 2228503, 0, 1, 2162968, 0, 1, 2228504, 0, 1, 2162969, 0, 1, 2228505, 0, 1, 2162970, 0, 1, 2228506, 0, 1, 2162971, 0, 1, 2228507, 0, 1, 2162972, 0, 1, 2228508, 0, 1, 2162973, 0, 1, 2228509, 0, 1, 1769726, 0, 1, 1835262, 0, 1, 1900798, 0, 1, 1966334, 0, 1, 1769727, 0, 1, 1835263, 0, 1, 1900799, 0, 1, 1966335, 0, 1, 1769728, 0, 1, 1835264, 0, 1, 1900800, 0, 1, 1966336, 0, 1, 1769729, 0, 1, 1835265, 0, 1, 1900801, 0, 1, 1966337, 0, 1, 1769730, 0, 1, 1835266, 0, 1, 1900802, 0, 1, 1966338, 0, 1, 2031870, 0, 1, 2097406, 0, 1, 2162942, 0, 1, 2228478, 0, 1, 2294014, 0, 1, 2359550, 0, 1, 2031871, 0, 1, 2097407, 0, 1, 2162943, 0, 1, 2228479, 0, 1, 2294015, 0, 1, 2359551, 0, 1, 2687217, 0, 1, 2752753, 0, 1, 2818289, 0, 1, 2687218, 0, 1, 2752754, 0, 1, 2818290, 0, 1, 2687219, 0, 1, 2752755, 0, 1, 2818291, 0, 1, 2687220, 0, 1, 2752756, 0, 1, 2818292, 0, 1, 2687221, 0, 1, 2752757, 0, 1, 2818293, 0, 1, 2687222, 0, 1, 2752758, 0, 1, 2687223, 0, 1, 2752759, 0, 1, 2687224, 0, 1, 2752760, 0, 1, 2687225, 0, 1, 2752761, 0, 1, 2687226, 0, 1, 2752762, 0, 1, 2687227, 0, 1, 2752763, 0, 1, 2687205, 0, 1, 2752741, 0, 1, 2818277, 0, 1, 2687206, 0, 1, 2752742, 0, 1, 2818278, 0, 1, -196364, 0, 1, -130828, 0, 1, -65292, 0, 1, 244, 0, 1, 65780, 0, 1, 131316, 0, 1, 196852, 0, 1, 262388, 0, 1, 327924, 0, 1, 393460, 0, 1, 458996, 0, 1, 524532, 0, 1, 590068, 0, 1, 655604, 0, 1, 721140, 0, 1, 786676, 0, 1, 852212, 0, 1, 917748, 0, 1, -196363, 0, 1, -130827, 0, 1, -65291, 0, 1, 245, 0, 1, 65781, 0, 1, 131317, 0, 1, 196853, 0, 1, 262389, 0, 1, 327925, 0, 1, 393461, 0, 1, 458997, 0, 1, 524533, 0, 1, 590069, 0, 1, 655605, 0, 1, 721141, 0, 1, 786677, 0, 1, 852213, 0, 1, 917749, 0, 1, -196362, 0, 1, -130826, 0, 1, -65290, 0, 1, 246, 0, 1, 65782, 0, 1, 131318, 0, 1, 196854, 0, 1, 262390, 0, 1, 327926, 0, 1, 393462, 0, 1, 458998, 0, 1, 524534, 0, 1, 590070, 0, 1, 655606, 0, 1, 721142, 0, 1, 786678, 0, 1, 852214, 0, 1, 917750, 0, 1, -196361, 0, 1, -130825, 0, 1, -65289, 0, 1, 247, 0, 1, 65783, 0, 1, 131319, 0, 1, 196855, 0, 1, 262391, 0, 1, 327927, 0, 1, 393463, 0, 1, 458999, 0, 1, 524535, 0, 1, 590071, 0, 1, 655607, 0, 1, 721143, 0, 1, 786679, 0, 1, 852215, 0, 1, 917751, 0, 1, -196360, 0, 1, -130824, 0, 1, -65288, 0, 1, 248, 0, 1, 65784, 0, 1, 131320, 0, 1, 196856, 0, 1, 262392, 0, 1, 327928, 0, 1, 393464, 0, 1, 459000, 0, 1, 524536, 0, 1, 590072, 0, 1, 655608, 0, 1, 721144, 0, 1, 786680, 0, 1, 852216, 0, 1, 917752, 0, 1, -196359, 0, 1, -130823, 0, 1, -65287, 0, 1, 249, 0, 1, 65785, 0, 1, 131321, 0, 1, 196857, 0, 1, 262393, 0, 1, 327929, 0, 1, 393465, 0, 1, 459001, 0, 1, 524537, 0, 1, 590073, 0, 1, 655609, 0, 1, 721145, 0, 1, 786681, 0, 1, 852217, 0, 1, 917753, 0, 1, -196358, 0, 1, -130822, 0, 1, -65286, 0, 1, 250, 0, 1, 65786, 0, 1, 131322, 0, 1, 196858, 0, 1, 262394, 0, 1, 327930, 0, 1, 393466, 0, 1, 459002, 0, 1, 524538, 0, 1, 590074, 0, 1, 655610, 0, 1, 721146, 0, 1, 786682, 0, 1, 852218, 0, 1, 917754, 0, 1, -196357, 0, 1, -130821, 0, 1, -65285, 0, 1, 251, 0, 1, 65787, 0, 1, 131323, 0, 1, 196859, 0, 1, 262395, 0, 1, 327931, 0, 1, 393467, 0, 1, 459003, 0, 1, 524539, 0, 1, 590075, 0, 1, 655611, 0, 1, 721147, 0, 1, 786683, 0, 1, 852219, 0, 1, 917755, 0, 1, -196356, 0, 1, -130820, 0, 1, -65284, 0, 1, 252, 0, 1, 65788, 0, 1, 131324, 0, 1, 196860, 0, 1, 262396, 0, 1, 327932, 0, 1, 393468, 0, 1, 459004, 0, 1, 524540, 0, 1, 590076, 0, 1, 655612, 0, 1, 721148, 0, 1, 786684, 0, 1, 852220, 0, 1, 917756, 0, 1, -196355, 0, 1, -130819, 0, 1, -65283, 0, 1, 253, 0, 1, 65789, 0, 1, 131325, 0, 1, 196861, 0, 1, 262397, 0, 1, 327933, 0, 1, 393469, 0, 1, 459005, 0, 1, 524541, 0, 1, 590077, 0, 1, 655613, 0, 1, 721149, 0, 1, 786685, 0, 1, 852221, 0, 1, 917757, 0, 1, -196354, 0, 1, -130818, 0, 1, -65282, 0, 1, 254, 0, 1, 65790, 0, 1, 131326, 0, 1, 196862, 0, 1, 262398, 0, 1, 327934, 0, 1, 393470, 0, 1, 459006, 0, 1, 524542, 0, 1, 590078, 0, 1, 655614, 0, 1, 721150, 0, 1, 786686, 0, 1, 852222, 0, 1, 917758, 0, 1, -196353, 0, 1, -130817, 0, 1, -65281, 0, 1, 255, 0, 1, 65791, 0, 1, 131327, 0, 1, 196863, 0, 1, 262399, 0, 1, 327935, 0, 1, 393471, 0, 1, 459007, 0, 1, 524543, 0, 1, 590079, 0, 1, 655615, 0, 1, 721151, 0, 1, 786687, 0, 1, 852223, 0, 1, 917759, 0, 1, -196352, 0, 1, -130816, 0, 1, -65280, 0, 1, 256, 0, 1, 65792, 0, 1, 131328, 0, 1, 196864, 0, 1, 262400, 0, 1, 327936, 0, 1, 393472, 0, 1, 459008, 0, 1, 524544, 0, 1, 590080, 0, 1, 655616, 0, 1, 721152, 0, 1, 786688, 0, 1, 852224, 0, 1, 917760, 0, 1, -196351, 0, 1, -130815, 0, 1, -65279, 0, 1, 257, 0, 1, 65793, 0, 1, 131329, 0, 1, 196865, 0, 1, 262401, 0, 1, 327937, 0, 1, 393473, 0, 1, 459009, 0, 1, 524545, 0, 1, 590081, 0, 1, 655617, 0, 1, 721153, 0, 1, 786689, 0, 1, 852225, 0, 1, 917761, 0, 1, -196350, 0, 1, -130814, 0, 1, -65278, 0, 1, 258, 0, 1, 65794, 0, 1, 131330, 0, 1, 196866, 0, 1, 262402, 0, 1, 327938, 0, 1, 393474, 0, 1, 459010, 0, 1, 524546, 0, 1, 590082, 0, 1, 655618, 0, 1, 721154, 0, 1, 786690, 0, 1, 852226, 0, 1, 917762, 0, 1, -196349, 0, 1, -130813, 0, 1, -65277, 0, 1, 259, 0, 1, 65795, 0, 1, 131331, 0, 1, 196867, 0, 1, 262403, 0, 1, 327939, 0, 1, 393475, 0, 1, 459011, 0, 1, 524547, 0, 1, 590083, 0, 1, 655619, 0, 1, 721155, 0, 1, 786691, 0, 1, 852227, 0, 1, 917763, 0, 1, -196348, 0, 1, -130812, 0, 1, -65276, 0, 1, 260, 0, 1, 65796, 0, 1, 131332, 0, 1, 196868, 0, 1, 262404, 0, 1, 327940, 0, 1, 393476, 0, 1, 459012, 0, 1, 524548, 0, 1, 590084, 0, 1, 655620, 0, 1, 721156, 0, 1, 786692, 0, 1, 852228, 0, 1, 917764, 0, 1, -196347, 0, 1, -130811, 0, 1, -65275, 0, 1, 261, 0, 1, 65797, 0, 1, 131333, 0, 1, 196869, 0, 1, 262405, 0, 1, 327941, 0, 1, 393477, 0, 1, 459013, 0, 1, 524549, 0, 1, 590085, 0, 1, 655621, 0, 1, 721157, 0, 1, 786693, 0, 1, 852229, 0, 1, 917765, 0, 1, -196346, 0, 1, -130810, 0, 1, -65274, 0, 1, 262, 0, 1, 65798, 0, 1, 131334, 0, 1, 196870, 0, 1, 262406, 0, 1, 327942, 0, 1, 393478, 0, 1, 459014, 0, 1, 524550, 0, 1, 590086, 0, 1, 655622, 0, 1, 721158, 0, 1, 786694, 0, 1, 852230, 0, 1, 917766, 0, 1, -196345, 0, 1, -130809, 0, 1, -65273, 0, 1, 263, 0, 1, 65799, 0, 1, 131335, 0, 1, 196871, 0, 1, 262407, 0, 1, 327943, 0, 1, 393479, 0, 1, 459015, 0, 1, 524551, 0, 1, 590087, 0, 1, 655623, 0, 1, 721159, 0, 1, 786695, 0, 1, 852231, 0, 1, 917767, 0, 1, -196344, 0, 1, -130808, 0, 1, -65272, 0, 1, 264, 0, 1, 65800, 0, 1, 131336, 0, 1, 196872, 0, 1, 262408, 0, 1, 327944, 0, 1, 393480, 0, 1, 459016, 0, 1, 524552, 0, 1, 590088, 0, 1, 655624, 0, 1, 721160, 0, 1, 786696, 0, 1, 852232, 0, 1, 917768, 0, 1, -196343, 0, 1, -130807, 0, 1, -65271, 0, 1, 265, 0, 1, 65801, 0, 1, 131337, 0, 1, 196873, 0, 1, 262409, 0, 1, 327945, 0, 1, 393481, 0, 1, 459017, 0, 1, 524553, 0, 1, 590089, 0, 1, 655625, 0, 1, 721161, 0, 1, 786697, 0, 1, 852233, 0, 1, 917769, 0, 1, -196342, 0, 1, -130806, 0, 1, -65270, 0, 1, 266, 0, 1, 65802, 0, 1, 131338, 0, 1, 196874, 0, 1, 262410, 0, 1, 327946, 0, 1, 393482, 0, 1, 459018, 0, 1, 524554, 0, 1, 590090, 0, 1, 655626, 0, 1, 721162, 0, 1, 786698, 0, 1, 852234, 0, 1, 917770, 0, 1, -196341, 0, 1, -130805, 0, 1, -65269, 0, 1, 267, 0, 1, 65803, 0, 1, 131339, 0, 1, 196875, 0, 1, 262411, 0, 1, 327947, 0, 1, 393483, 0, 1, 459019, 0, 1, 524555, 0, 1, 590091, 0, 1, 655627, 0, 1, 721163, 0, 1, 786699, 0, 1, 852235, 0, 1, 917771, 0, 1, -196340, 0, 1, -130804, 0, 1, -65268, 0, 1, 268, 0, 1, 65804, 0, 1, 131340, 0, 1, 196876, 0, 1, 262412, 0, 1, 327948, 0, 1, 393484, 0, 1, 459020, 0, 1, 524556, 0, 1, 590092, 0, 1, 655628, 0, 1, 721164, 0, 1, 786700, 0, 1, 852236, 0, 1, 917772, 0, 1, -196339, 0, 1, -130803, 0, 1, -65267, 0, 1, 269, 0, 1, 65805, 0, 1, 131341, 0, 1, 196877, 0, 1, 262413, 0, 1, 327949, 0, 1, 393485, 0, 1, 459021, 0, 1, 524557, 0, 1, 590093, 0, 1, 655629, 0, 1, 721165, 0, 1, 786701, 0, 1, 852237, 0, 1, 917773, 0, 1, -196338, 0, 1, -130802, 0, 1, -65266, 0, 1, 270, 0, 1, 65806, 0, 1, 131342, 0, 1, 196878, 0, 1, 262414, 0, 1, 327950, 0, 1, 393486, 0, 1, 459022, 0, 1, 524558, 0, 1, 590094, 0, 1, 655630, 0, 1, 721166, 0, 1, 786702, 0, 1, 852238, 0, 1, 917774, 0, 1, -196337, 0, 1, -130801, 0, 1, -65265, 0, 1, 271, 0, 1, 65807, 0, 1, 131343, 0, 1, 196879, 0, 1, 262415, 0, 1, 327951, 0, 1, 393487, 0, 1, 459023, 0, 1, 524559, 0, 1, 590095, 0, 1, 655631, 0, 1, 721167, 0, 1, 786703, 0, 1, 852239, 0, 1, 917775, 0, 1, -196336, 0, 1, -130800, 0, 1, -65264, 0, 1, 272, 0, 1, 65808, 0, 1, 131344, 0, 1, 196880, 0, 1, 262416, 0, 1, 327952, 0, 1, 393488, 0, 1, 459024, 0, 1, 524560, 0, 1, 590096, 0, 1, 655632, 0, 1, 721168, 0, 1, 786704, 0, 1, 852240, 0, 1, 917776, 0, 1, -196335, 0, 1, -130799, 0, 1, -65263, 0, 1, 273, 0, 1, 65809, 0, 1, 131345, 0, 1, 196881, 0, 1, 262417, 0, 1, 327953, 0, 1, 393489, 0, 1, 459025, 0, 1, 524561, 0, 1, 590097, 0, 1, 655633, 0, 1, 721169, 0, 1, 786705, 0, 1, 852241, 0, 1, 917777, 0, 1, -196334, 0, 1, -130798, 0, 1, -65262, 0, 1, 274, 0, 1, 65810, 0, 1, 131346, 0, 1, 196882, 0, 1, 262418, 0, 1, 327954, 0, 1, 393490, 0, 1, 459026, 0, 1, 524562, 0, 1, 590098, 0, 1, 655634, 0, 1, 721170, 0, 1, 786706, 0, 1, 852242, 0, 1, 917778, 0, 1, -196333, 0, 1, -130797, 0, 1, -65261, 0, 1, 275, 0, 1, 65811, 0, 1, 131347, 0, 1, 196883, 0, 1, 262419, 0, 1, 327955, 0, 1, 393491, 0, 1, 459027, 0, 1, 524563, 0, 1, 590099, 0, 1, 655635, 0, 1, 721171, 0, 1, 786707, 0, 1, 852243, 0, 1, 917779, 0, 1, -196332, 0, 1, -130796, 0, 1, -65260, 0, 1, 276, 0, 1, 65812, 0, 1, 131348, 0, 1, 196884, 0, 1, 262420, 0, 1, 327956, 0, 1, 393492, 0, 1, 459028, 0, 1, 524564, 0, 1, 590100, 0, 1, 655636, 0, 1, 721172, 0, 1, 786708, 0, 1, 852244, 0, 1, 917780, 0, 1, -196331, 0, 1, -130795, 0, 1, -65259, 0, 1, 277, 0, 1, 65813, 0, 1, 131349, 0, 1, 196885, 0, 1, 262421, 0, 1, 327957, 0, 1, 393493, 0, 1, 459029, 0, 1, 524565, 0, 1, 590101, 0, 1, 655637, 0, 1, 721173, 0, 1, 786709, 0, 1, 852245, 0, 1, 917781, 0, 1, -196330, 0, 1, -130794, 0, 1, -65258, 0, 1, 278, 0, 1, 65814, 0, 1, 131350, 0, 1, 196886, 0, 1, 262422, 0, 1, 327958, 0, 1, 393494, 0, 1, 459030, 0, 1, 524566, 0, 1, 590102, 0, 1, 655638, 0, 1, 721174, 0, 1, 786710, 0, 1, 852246, 0, 1, 917782, 0, 1, -196329, 0, 1, -130793, 0, 1, -65257, 0, 1, 279, 0, 1, 65815, 0, 1, 131351, 0, 1, 196887, 0, 1, 262423, 0, 1, 327959, 0, 1, 393495, 0, 1, 459031, 0, 1, 524567, 0, 1, 590103, 0, 1, 655639, 0, 1, 721175, 0, 1, 786711, 0, 1, 852247, 0, 1, 917783, 0, 1, -196328, 0, 1, -130792, 0, 1, -65256, 0, 1, 280, 0, 1, 65816, 0, 1, 131352, 0, 1, 196888, 0, 1, 262424, 0, 1, 327960, 0, 1, 393496, 0, 1, 459032, 0, 1, 524568, 0, 1, 590104, 0, 1, 655640, 0, 1, 721176, 0, 1, 786712, 0, 1, 852248, 0, 1, 917784, 0, 1, -196327, 0, 1, -130791, 0, 1, -65255, 0, 1, 281, 0, 1, 65817, 0, 1, 131353, 0, 1, 196889, 0, 1, 262425, 0, 1, 327961, 0, 1, 393497, 0, 1, 459033, 0, 1, 524569, 0, 1, 590105, 0, 1, 655641, 0, 1, 721177, 0, 1, 786713, 0, 1, 852249, 0, 1, 917785, 0, 1, -196326, 0, 1, -130790, 0, 1, -65254, 0, 1, 282, 0, 1, 65818, 0, 1, 131354, 0, 1, 196890, 0, 1, 262426, 0, 1, 327962, 0, 1, 393498, 0, 1, 459034, 0, 1, 524570, 0, 1, 590106, 0, 1, 655642, 0, 1, 721178, 0, 1, 786714, 0, 1, 852250, 0, 1, 917786, 0, 1, -196325, 0, 1, -130789, 0, 1, -65253, 0, 1, 283, 0, 1, 65819, 0, 1, 131355, 0, 1, 196891, 0, 1, 262427, 0, 1, 327963, 0, 1, 393499, 0, 1, 459035, 0, 1, 524571, 0, 1, 590107, 0, 1, 655643, 0, 1, 721179, 0, 1, 786715, 0, 1, 852251, 0, 1, 917787, 0, 1, -196324, 0, 1, -130788, 0, 1, -65252, 0, 1, 284, 0, 1, 65820, 0, 1, 131356, 0, 1, 196892, 0, 1, 262428, 0, 1, 327964, 0, 1, 393500, 0, 1, 459036, 0, 1, 524572, 0, 1, 590108, 0, 1, 655644, 0, 1, 721180, 0, 1, 786716, 0, 1, 852252, 0, 1, 917788, 0, 1, -196323, 0, 1, -130787, 0, 1, -65251, 0, 1, 285, 0, 1, 65821, 0, 1, 131357, 0, 1, 196893, 0, 1, 262429, 0, 1, 327965, 0, 1, 393501, 0, 1, 459037, 0, 1, 524573, 0, 1, 590109, 0, 1, 655645, 0, 1, 721181, 0, 1, 786717, 0, 1, 852253, 0, 1, 917789, 0, 1, -196322, 0, 1, -130786, 0, 1, -65250, 0, 1, 286, 0, 1, 65822, 0, 1, 131358, 0, 1, 196894, 0, 1, 262430, 0, 1, 327966, 0, 1, 393502, 0, 1, 459038, 0, 1, 524574, 0, 1, 590110, 0, 1, 655646, 0, 1, 721182, 0, 1, 786718, 0, 1, 852254, 0, 1, 917790, 0, 1, -196321, 0, 1, -130785, 0, 1, -65249, 0, 1, 287, 0, 1, 65823, 0, 1, 131359, 0, 1, 196895, 0, 1, 262431, 0, 1, 327967, 0, 1, 393503, 0, 1, 459039, 0, 1, 524575, 0, 1, 590111, 0, 1, 655647, 0, 1, 721183, 0, 1, 786719, 0, 1, 852255, 0, 1, 917791, 0, 1, 2949349, 0, 1, 2883813, 0, 1, 2752743, 0, 1, 2687207, 0, 1, 2687208, 0, 1, 2687209, 0, 1, 2687214, 0, 1, 2687215, 0, 1, 2687216, 0, 1, 2752752, 0, 1, 2687228, 0, 1, 2490622, 0, 1, 2425086, 0, 1, 2097408, 0, 1, 2162944, 0, 1, 2031872, 0, 1, 2031873, 0, 1, 1900803, 0, 1, 1835267, 0, 1, 1769731, 0, 1, 1769734, 0, 1, 1769733, 0, 1, 1769732, 0, 1, 1835268, 0, 1, 1835269, 0, 1, 1769735, 0, 1, 1769741, 0, 1, 1769742, 0, 1, 1769743, 0, 1, 1769744, 0, 1, 1769745, 0, 1, 1835280, 0, 1, 1835279, 0, 1, 1835281, 0, 1, 1900817, 0, 1, 1900816, 0, 1, 1966353, 0, 1, 2162963, 0, 1, 2162974, 0, 1, 1507616, 0, 1, 2031904, 0, 1, 1573152, 0, 1, 1245478, 0, 1, 1311014, 0, 1, 1245484, 0, 1, 1245485, 0, 1, 1245486, 0, 1, 1245487, 0, 1, 1245488, 0, 1, 1245489, 0, 1, 1245490, 0, 1, 1245491, 0, 1, 1245492, 0, 1, 1245493, 0, 1, 1114423, 0, 1, 1048887, 0, 1, 590137, 0, 1, 524601, 0, 1, 459065, 0, 1, 459066, 0, 1, 524602, 0, 1, 393530, 0, 1, 393529, 0, 1, 393531, 0, 1, 327995, 0, 1, 262459, 0, 1, 196923, 0, 1, 131387, 0, 1, 65851, 0, 1, 315, 0, 1, -65221, 0, 1, -130758, 0, 1, -196294, 0, 1, -196295, 0, 1, -196293, 0, 1, -130757, 0, 1, -130759, 0, 1, -65223, 0, 1, -65222, 0, 1, 314, 0, 1, 313, 0, 1, 65849, 0, 1, 65850, 0, 1, 131386, 0, 1, 131385, 0, 1, 196921, 0, 1, 196922, 0, 1, 262458, 0, 1, 262457, 0, 1, 327993, 0, 1, 327994, 0, 1, -196292, 0, 1, -130756, 0, 1, -130755, 0, 1, -130754, 0, 1, -130753, 0, 1, -130752, 0, 1, -130751, 0, 1, -130750, 0, 1, -130749, 0, 1, -130748, 0, 1, -130747, 0, 1, -130746, 0, 1, -130745, 0, 1, -130744, 0, 1, -130743, 0, 1, -130742, 0, 1, -130741, 0, 1, -130740, 0, 1, -130739, 0, 1, -130738, 0, 1, -130737, 0, 1, -130736, 0, 1, -130735, 0, 1, -130734, 0, 1, -130733, 0, 1, -196269, 0, 1, -196270, 0, 1, -196271, 0, 1, -196272, 0, 1, -196273, 0, 1, -196274, 0, 1, -196275, 0, 1, -196276, 0, 1, -196277, 0, 1, -196278, 0, 1, -196279, 0, 1, -196280, 0, 1, -196281, 0, 1, -196282, 0, 1, -196283, 0, 1, -196284, 0, 1, -196285, 0, 1, -196286, 0, 1, -196287, 0, 1, -196288, 0, 1, -196291, 0, 1, -196290, 0, 1, -196289, 0, 1, 1769767, 0, 1, 1769768, 0, 1, 1769769, 0, 1, 1769770, 0, 1, 1769771, 0, 1, 1704233, 0, 1, 1704234, 0, 1, 1704235, 0, 1, 1704236, 0, 1, 1769772, 0, 1, 1835308, 0, 1, 1835307, 0, 1, 1835309, 0, 1, 1769773, 0, 1, 1704237, 0, 1, 1900845, 0, 1, 1966381, 0, 1, 2031917, 0, 1, 2097453, 0, 1, 2162989, 0, 1, 2228525, 0, 1, 2228526, 0, 1, 2162990, 0, 1, 2097454, 0, 1, 2031918, 0, 1, 1966382, 0, 1, 1900846, 0, 1, 1835310, 0, 1, 1769774, 0, 1, 1835311, 0, 1, 1900847, 0, 1, 1966383, 0, 1, 2031919, 0, 1, 2097455, 0, 1, 2162991, 0, 1, 2228527, 0, 1, 1900848, 0, 1, 1966384, 0, 1, 2031920, 0, 1, 2097456, 0, 1, 2162992, 0, 1, 2228528, 0, 1, 1769775, 0, 1, 1835312, 0, 1, 1900849, 0, 1, 1966385, 0, 1, 2031922, 0, 1, 2031921, 0, 1, 2097457, 0, 1, 2162993, 0, 1, 2162994, 0, 1, 2097458, 0, 1, 2228530, 0, 1, 2228529, 0, 1, 2294065, 0, 1, 2294066, 0, 1, 2294064, 0, 1, 2294063, 0, 1, 2294062, 0, 1, 2294061, 0, 1, 2359597, 0, 1, 2359598, 0, 1, 2359599, 0, 1, 2359600, 0, 1, 2359601, 0, 1, 2359602, 0, 1, 2425138, 0, 1, 2425137, 0, 1, 2425136, 0, 1, 2425135, 0, 1, 2425134, 0, 1, 2425133, 0, 1, 1835313, 0, 1, 1900850, 0, 1, 1966386, 0, 1, 1966387, 0, 1, 2031924, 0, 1, 2031923, 0, 1, 2097459, 0, 1, 2162995, 0, 1, 2228531, 0, 1, 2294067, 0, 1, 2359603, 0, 1, 2425139, 0, 1, 2425140, 0, 1, 2359604, 0, 1, 2294068, 0, 1, 2228532, 0, 1, 2162996, 0, 1, 2097460, 0, 1, 2162997, 0, 1, 2228533, 0, 1, 2294069, 0, 1, 2359605, 0, 1, 2425141, 0, 1, 2294070, 0, 1, 2359606, 0, 1, 2425142, 0, 1, 2490669, 0, 1, 2490670, 0, 1, 2490671, 0, 1, 2490672, 0, 1, 2490677, 0, 1, 2490678, 0, 1, 2490676, 0, 1, 2490675, 0, 1, 2490674, 0, 1, 2490673, 0, 1, 2556214, 0, 1, 2556213, 0, 1, 2556212, 0, 1, 2556211, 0, 1, 2556210, 0, 1, 2556209, 0, 1, 2556208, 0, 1, 2556207, 0, 1, 2621743, 0, 1, 2621744, 0, 1, 2621745, 0, 1, 2621746, 0, 1, 2621747, 0, 1, 2621748, 0, 1, 2621749, 0, 1, 2621750, 0, 1, 2556206, 0, 1, 2687280, 0, 1, 2687281, 0, 1, 2687282, 0, 1, 2687283, 0, 1, 2687284, 0, 1, 2687285, 0, 1, 2687286, 0, 1, 2752822, 0, 1, 2818358, 0, 1, 2883894, 0, 1, 2949430, 0, 1, 3014966, 0, 1, 3080502, 0, 1, 2949429, 0, 1, 2883893, 0, 1, 2818357, 0, 1, 2752821, 0, 1, 3014965, 0, 1, 3080501, 0, 1048581, 3014964, 0, 1048581, 2949428, 0, 1, 2949427, 0, 1048581, 2883891, 0, 1, 2818355, 0, 1, 2752819, 0, 1, 2752820, 0, 1, 2818356, 0, 1, 2883892, 0, 1, 2752818, 0, 1, 2752817, 0, 1, 2818354, 0, 1, 2556205, 0, 1048581, 2621742, 0, 1048581, 2687279, 0, 1048581, 2752816, 0, 1048581, 2818353, 0, 1048581, 2883890, 0, 1048581, 3146038, 0, 1048581, 1900843, 0, 1048581, 2031916, 0, 1048595, 1704224, 0, 1441811, 1900832, 0, 1441810, 1900844, 0, 1, 2162998, 0, 1441810, 2031925, 0, 1441810, 1966388, 0, 1441796, 1900851, 0, 1441796, 1835314, 0, 1441796, 1704238, 0, 1441799, 1769776, 0, 1441799, 196742, 0, 1048580, 262278, 0, 2, 196743, 0, 1048577, 262279, 0, 2, 196744, 0, 1048577, 262280, 0, 1, 196745, 0, 1441796, 262281, 0, 1, 327817, 0, 1048584, 393356, 0, 1048580, 458892, 0, 1, 524428, 0, 1048581, 393357, 0, 1048577, 458893, 0, 1, 524429, 0, 2, 393358, 0, 1441796, 458894, 0, 1, 524430, 0, 1441797, 655503, 0, 1048580, 721039, 0, 1048581, 589968, 0, 1048577, 655504, 0, 1048577, 721040, 0, 2, 589969, 0, 1048577, 655505, 0, 1048577, 721041, 0, 2, 589970, 0, 1048577, 655506, 0, 1048577, 721042, 0, 2, 589971, 0, 1048577, 655507, 0, 1048577, 721043, 0, 2, 655508, 0, 1441796, 721044, 0, 1441797, 852119, 0, 2, 786584, 0, 1048583, 852120, 0, 2, 721049, 0, 1048580, 786585, 0, 1, 852121, 0, 2, 721050, 0, 1, 786586, 0, 1, 852122, 0, 2, 1310868, 0, 1048581, 1245332, 0, 1048580, 1245333, 0, 1441796, 1638606, 0, 2, 1441994, 0, 1048581, 2359506, 0, 2, 2621655, 0, 2, 2293970, 0, 1, 2556119, 0, 1, 2228434, 0, 1048580, 2490583, 0, 1441796, 2556120, 0, 1441796, 2293969, 0, 1048580, 2359505, 0, 1048581, 2621656, 0, 1441797, 2031830, 0, 1048581, 2031831, 0, 1, 1966295, 0, 1, 2097367, 0, 1048581, 1704143, 0, 1048580, 1638608, 0, 1048580, 1769681, 0, 1441811, 1638610, 0, 1441811, 1573073, 0, 1048580, 1704144, 0, 14, 1638609, 0, 655374, 1507538, 0, 1048580, 1900754, 0, 1048583, 1835220, 0, 1048583, 1835221, 0, 1441799, 1900759, 0, 1441796, 1900755, 0, 1, 1900758, 0, 1, 1900756, 0, 14, 1900757, 0, 655374, 1441998, 0, 1441810, 1441997, 0, 1048594, 1245383, 0, 1048594, 1179850, 0, 1441810, 1310923, 0, 1441796, 1441995, 0, 1441811, 1310920, 0, 14, 1179849, 0, 1441806, 1245384, 0, 1, 1179848, 0, 1, 1245385, 0, 1, 1310921, 0, 1, 1310922, 0, 1, 1114312, 0, 1, 1114313, 0, 1, 983241, 0, 1441810, 983240, 0, 1048594, 2949333, 0, 2, 2883797, 0, 1048590, 1310898, 0, 1048580, 1310899, 0, 1, 1376434, 0, 1, 1376435, 0, 1441806, 1507507, 0, 1441811, 1573042, 0, 1441797, 1507506, 0, 1, 1441970, 0, 1, 1573041, 0, 2, 1441969, 0, 1048594, 1704108, 0, 1441799, 1704106, 0, 1048594, 1704107, 0, 1, 1769643, 0, 1, 1769644, 0, 1, 1769645, 0, 1441795, 1900716, 0, 1441809, 1835179, 0, 13, 1900715, 0, 1, 1900714, 0, 1, 1835178, 0, 1, 1835177, 0, 1048580, 1900712, 0, 1048594, 2031785, 0, 1441811, 2031784, 0, 1048581, 1966250, 0, 1048581, 1966251, 0, 1441795, 1900713, 0, 1, 1900733, 0, 1441800, 1769660, 0, 1048584, 1704124, 0, 1048583, 1704126, 0, 1441799, 1704125, 0, 1, 1769661, 0, 655374, 1835197, 0, 1, 1835198, 0, 1, 1769662, 0, 1, 1769663, 0, 1441795, 1638595, 0, 1048580, 1704131, 0, 2, 1638596, 0, 1441799, 1704132, 0, 1, 1769668, 0, 2, 1704133, 0, 14, 1769669, 0, 2, 1704134, 0, 1441810, 1835206, 0, 2, 2883796, 0, 1048580, 2949332, 0, 1048581, 2228425, 0, 1441811, 2293959, 0, 1048584, 2293960, 0, 1441797, 2228424, 0, 1, 2228423, 0, 655373, 2228422, 0, 1, 2162887, 0, 1048583, 2097353, 0, 1048583, 2162888, 0, 1, 262195, 0, 1441810, 262184, 0, 1048594, 458870, 0, 1, 2883798, 0, 1441797, -196268, 0, 1, -130732, 0, 1, -65196, 0, 1, 340, 0, 2, -196267, 0, 1, -130731, 0, 1, -65195, 0, 1, 341, 0, 2, -196266, 0, 1, -130730, 0, 1, -65194, 0, 1, 342, 0, 2, -196265, 0, 1, -130729, 0, 1, -65193, 0, 1, 343, 0, 2, -196264, 0, 1, -130728, 0, 1, -65192, 0, 1, 344, 0, 2, -196263, 0, 1, -130727, 0, 1, -65191, 0, 1, 345, 0, 2, -196262, 0, 1, -130726, 0, 1, -65190, 0, 1, 346, 0, 2, -196261, 0, 1, -130725, 0, 1, -65189, 0, 1, 347, 0, 2)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_wwpf4")
compositor = SubResource("Compositor_d3jkd")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 10)
light_angular_distance = 90.0

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 7)
fov = 90.0

[node name="Barrier" type="StaticBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0, 0)

[node name="LeftBarrier" type="CollisionShape3D" parent="Barrier"]
shape = SubResource("BoxShape3D_dwgg1")

[node name="DeathArea" type="Area3D" parent="."]

[node name="Bottom" type="CollisionShape3D" parent="DeathArea"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.5, 0)
shape = SubResource("BoxShape3D_ru4tf")

[node name="SomeOtherDeathArea" type="CollisionShape3D" parent="DeathArea"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, 0)
shape = SubResource("BoxShape3D_6sh32")

[editable path="Player/Body"]
